openapi: 3.1.0
info:
  version: 1.0.0
  title: DOCUMENTATION PORTAL DO BEN
  contact:
    name: TEAM
    email: dev@be-enlighten.com
    url: be-enlighten.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  x-generation-date: 08/17/2022 8:11:34 AM
  x-logo:
    url: 'https://redocly.github.io/openapi-template/logo.png'
  description: |
    # Presentation

    ## Introduction

    The Be-Enlighten API allows you to manage all resources within our system simply and programmatically using conventional HTTP requests.

    All the functionality you are familiar with from the system dashboard is also available through the API, allowing you to script the complex actions your situation requires.

    The API documentation will begin with an overview of the design and technology that has been implemented, followed by reference information about specific endpoints.

    ## OpenAPI Specification

    The goal of The OpenAPI Specification is to define a standard,
    language-agnostic interface to REST APIs which
    allows both humans and computers to discover and understand the capabilities
    of the service without access to source
    code, documentation, or through network traffic inspection. When properly
    defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what
    interfaces have done for lower-level programming, OpenAPI removes the
    guesswork in calling the service.

    ## Requests

    Any tool that is fluent in HTTP can communicate with the API simply by requesting the correct URI.
    Requests should be made using the HTTPS protocol so that traffic is encrypted. The interface responds
    to different methods depending on the action required.

    | Method   |      Usage    |
    |----------|-------------|
    |GET |	For simple retrieval of information about your account, Droplets, or environment, you should use the GET method. The information you request will be returned to you as a JSON object. The attributes defined by the JSON object can be used to form additional requests. Any request using the GET method is read-only and will not affect any of the objects you are querying.|
    |DELETE |	To destroy a resource and remove it from your account and environment, the DELETE method should be used. This will remove the specified object if it is found. If it is not found, the operation will return a response indicating that the object was not found. This idempotency means that you do not have to check for a resource's availability prior to issuing a delete command, the final state will be the same regardless of its existence.|
    |PUT |	To update the information about a resource in your account, the PUT method is available. Like the DELETE Method, the PUT method is idempotent. It sets the state of the target using the provided values, regardless of their current values. Requests using the PUT method do not need to check the current attributes of the object.|
    |PATCH |	Some resources support partial modification. In these cases, the PATCH method is available. Unlike PUT which generally requires a complete representation of a resource, a PATCH request is is a set of instructions on how to modify a resource updating only specific attributes.|
    |POST |	To create a new object, your request should specify the POST method. The POST request includes all of the attributes necessary to create a new object. When you wish to create a new object, send a POST request to the target endpoint.|
    |HEAD |	Finally, to retrieve metadata information, you should use the HEAD method to get the headers. This returns only the header of what would be returned with an associated GET request. Response headers contain some useful information about your API access and the results that are available for your request. For instance, the headers contain your current rate-limit value and the amount of time available until the limit resets. It also contains metrics about the total number of objects found, pagination information, and the total content length.|

    ## HTTP Status

    Along with the HTTP methods that the API responds to, it will also return standard HTTP statuses, including error codes.
    
    In the event of a problem, the status will contain the error code, while the body of the response will usually contain additional information about the problem that was encountered.
    
    In general, if the status returned is in the 200 range, it indicates that the request was fulfilled successfully and that no error was encountered.
    
    Return codes in the 400 range typically indicate that there was an issue with the request that was sent. Among other things, this could mean that you did not authenticate correctly, that you are requesting an action that you do not have authorization for, that the object you are requesting does not exist, or that your request is malformed.
    
    If you receive a status in the 500 range, this generally indicates a server-side problem.
    
    This means that we are having an issue on our end and cannot fulfill your request currently.

    400 and 500 level error responses will include a JSON object in their body, including the following attributes:

      | Name   |      Type      |  Description |
      |----------|-------------|------|
      | id |  string | A short identifier corresponding to the HTTP status code returned. For example, the ID for a response returning a 404 status code would be "not_found." |
      | message |    string   |   A message providing additional information about the error, including details to help resolve it when possible. |
      | requst_id | string |    Optionally, some endpoints may include a request ID that should be provided when reporting bugs or opening support tickets to help identify the issue. |

      ### Example Error Response

      ```bash
      HTTP/1.1 403 Forbidden
      {
        "id":       "forbidden",
        "message":  "You do not have access for the attempted action."
      }
      ```
servers:
  - url: https://api.portaldoben.com.br
    description: Production server
paths:
  /onlyoffice-callback:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Template
      security:
        - bearerAuth: []
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-document-templates:
    get:
      deprecated: false
      description: Find all the c-document-templates's records
      responses:
        '200':
          description: Retrieve c-document-templates document(s)
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/C-document-templates'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Template
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-document-templates record
      responses:
        '200':
          description: Retrieve c-document-templates document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewC-document-templates'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Template
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-document-templates'
  /c-document-templates/count:
    get:
      deprecated: false
      description: Retrieve the number of c-document-templates documents
      responses:
        '200':
          description: Retrieve c-document-templates document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/C-document-templates'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Template
      parameters: []
  /c-document-templates/{id}:
    get:
      deprecated: false
      description: Find one c-document-templates record
      responses:
        '200':
          description: Retrieve c-document-templates document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/C-document-templates'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Template
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-document-templates record
      responses:
        '200':
          description: Retrieve c-document-templates document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewC-document-templates'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Template
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-document-templates'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-document-templates record
      responses:
        '200':
          description: deletes a single c-document-templates based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Template
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-fields:
    get:
      deprecated: false
      description: Find all the c-fields's records
      responses:
        '200':
          description: Retrieve c-fields document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/C-fields'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Custom Fields
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-fields record
      responses:
        '200':
          description: Retrieve c-fields document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewC-fields'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Custom Fields
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-fields'
  /c-fields/count:
    get:
      deprecated: false
      description: Retrieve the number of c-fields documents
      responses:
        '200':
          description: Retrieve c-fields document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/C-fields'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Custom Fields
      parameters: []
  /c-fields/{id}:
    get:
      deprecated: false
      description: Find one c-fields record
      responses:
        '200':
          description: Retrieve c-fields document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/C-fields'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Custom Fields
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-fields record
      responses:
        '200':
          description: Retrieve c-fields document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/C-fields'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Custom Fields
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-fields'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-fields record
      responses:
        '200':
          description: deletes a single c-fields based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Custom Fields
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-files:
    get:
      deprecated: false
      description: Find all the c-files's records
      responses:
        '200':
          description: Retrieve c-files document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-files
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-files record
      responses:
        '200':
          description: Retrieve c-files document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-files
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-files'
  /c-files/count:
    get:
      deprecated: false
      description: Retrieve the number of c-files documents
      responses:
        '200':
          description: Retrieve c-files document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-files
      parameters: []
  /c-files/{id}:
    get:
      deprecated: false
      description: Find one c-files record
      responses:
        '200':
          description: Retrieve c-files document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-files
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-files record
      responses:
        '200':
          description: Retrieve c-files document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-files
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-files'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-files record
      responses:
        '200':
          description: deletes a single c-files based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-files
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-flow-item-tasks/webhook:
    post:
      deprecated: false
      description: Create a new c-flow-item-tasks record
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-flow-item-tasks/complete:
    post:
      deprecated: false
      description: Create a new c-flow-item-tasks record
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-flow-item-tasks/in-charge:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      parameters: []
  /c-flow-item-tasks:
    get:
      deprecated: false
      description: Find all the c-flow-item-tasks's records
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-flow-item-tasks record
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-flow-item-tasks'
  /c-flow-item-tasks/count:
    get:
      deprecated: false
      description: Retrieve the number of c-flow-item-tasks documents
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      parameters: []
  /c-flow-item-tasks/{id}:
    get:
      deprecated: false
      description: Find one c-flow-item-tasks record
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-flow-item-tasks record
      responses:
        '200':
          description: Retrieve c-flow-item-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-flow-item-tasks'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-flow-item-tasks record
      responses:
        '200':
          description: deletes a single c-flow-item-tasks based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-item-tasks
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-flow-items/user:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-flow-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-items
      parameters: []
  /c-flow-items:
    get:
      deprecated: false
      description: Find all the c-flow-items's records
      responses:
        '200':
          description: Retrieve c-flow-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-items
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-flow-items record
      responses:
        '200':
          description: Retrieve c-flow-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-items
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-flow-items'
  /c-flow-items/count:
    get:
      deprecated: false
      description: Retrieve the number of c-flow-items documents
      responses:
        '200':
          description: Retrieve c-flow-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-items
      parameters: []
  /c-flow-items/{id}:
    get:
      deprecated: false
      description: Find one c-flow-items record
      responses:
        '200':
          description: Retrieve c-flow-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-items
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-flow-items record
      responses:
        '200':
          description: Retrieve c-flow-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-items
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-flow-items'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-flow-items record
      responses:
        '200':
          description: deletes a single c-flow-items based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-items
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-flow-stages:
    get:
      deprecated: false
      description: Find all the c-flow-stages's records
      responses:
        '200':
          description: Retrieve c-flow-stages document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-stages
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-flow-stages record
      responses:
        '200':
          description: Retrieve c-flow-stages document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-stages
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-flow-stages'
  /c-flow-stages/count:
    get:
      deprecated: false
      description: Retrieve the number of c-flow-stages documents
      responses:
        '200':
          description: Retrieve c-flow-stages document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-stages
      parameters: []
  /c-flow-stages/{id}:
    get:
      deprecated: false
      description: Find one c-flow-stages record
      responses:
        '200':
          description: Retrieve c-flow-stages document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-stages
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-flow-stages record
      responses:
        '200':
          description: Retrieve c-flow-stages document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-stages
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-flow-stages'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-flow-stages record
      responses:
        '200':
          description: deletes a single c-flow-stages based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-flow-stages
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-folders:
    get:
      deprecated: false
      description: Find all the c-folders's records
      responses:
        '200':
          description: Retrieve c-folders document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-folders
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-folders record
      responses:
        '200':
          description: Retrieve c-folders document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-folders
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-folders'
  /c-folders/count:
    get:
      deprecated: false
      description: Retrieve the number of c-folders documents
      responses:
        '200':
          description: Retrieve c-folders document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-folders
      parameters: []
  /c-folders/{id}:
    get:
      deprecated: false
      description: Find one c-folders record
      responses:
        '200':
          description: Retrieve c-folders document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-folders
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-folders record
      responses:
        '200':
          description: Retrieve c-folders document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-folders
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-folders'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-folders record
      responses:
        '200':
          description: deletes a single c-folders based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-folders
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-form-results/user:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      parameters: []
  /c-form-results/{identification}/{email}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      parameters:
        - name: identification
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-form-results:
    get:
      deprecated: false
      description: Find all the c-form-results's records
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-form-results record
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-form-results'
  /c-form-results/count:
    get:
      deprecated: false
      description: Retrieve the number of c-form-results documents
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      parameters: []
  /c-form-results/{id}:
    get:
      deprecated: false
      description: Find one c-form-results record
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-form-results record
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-form-results'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-form-results record
      responses:
        '200':
          description: deletes a single c-form-results based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-form-results/public:
    post:
      deprecated: false
      description: Create a new c-form-results record
      responses:
        '200':
          description: Retrieve c-form-results document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-form-results
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-forms:
    get:
      deprecated: false
      description: Find all the c-forms's records
      responses:
        '200':
          description: Retrieve c-forms document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-forms record
      responses:
        '200':
          description: Retrieve c-forms document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-forms'
  /c-forms/count:
    get:
      deprecated: false
      description: Retrieve the number of c-forms documents
      responses:
        '200':
          description: Retrieve c-forms document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      parameters: []
  /c-forms/public/{identification}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-forms document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      parameters:
        - name: identification
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-forms/{identification}:
    get:
      deprecated: false
      description: Find one c-forms record
      responses:
        '200':
          description: Retrieve c-forms document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      parameters:
        - name: identification
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-forms record
      responses:
        '200':
          description: Retrieve c-forms document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-forms'
      parameters:
        - name: identification
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-forms record
      responses:
        '200':
          description: deletes a single c-forms based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      parameters:
        - name: identification
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-forms/id/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-forms document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-forms
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-item-notes:
    get:
      deprecated: false
      description: Find all the c-item-notes's records
      responses:
        '200':
          description: Retrieve c-item-notes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-notes
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-item-notes record
      responses:
        '200':
          description: Retrieve c-item-notes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-notes
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-item-notes'
  /c-item-notes/count:
    get:
      deprecated: false
      description: Retrieve the number of c-item-notes documents
      responses:
        '200':
          description: Retrieve c-item-notes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-notes
      parameters: []
  /c-item-notes/{id}:
    get:
      deprecated: false
      description: Find one c-item-notes record
      responses:
        '200':
          description: Retrieve c-item-notes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-notes
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-item-notes record
      responses:
        '200':
          description: Retrieve c-item-notes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-notes
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-item-notes'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-item-notes record
      responses:
        '200':
          description: deletes a single c-item-notes based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-notes
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-item-types:
    get:
      deprecated: false
      description: Find all the c-item-types's records
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-types
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-item-types record
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-types
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-item-types'
  /c-item-types/count:
    get:
      deprecated: false
      description: Retrieve the number of c-item-types documents
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-types
      parameters: []
  /c-item-types/{id}:
    get:
      deprecated: false
      description: Find one c-item-types record
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-types
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-item-types record
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-types
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-item-types'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-item-types record
      responses:
        '200':
          description: deletes a single c-item-types based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-item-types
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-item-types/{type}/fields:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Item Types Fields
      parameters:
        - name: type
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    post:
      deprecated: false
      description: Create a new c-item-types record
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Item Types Fields
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-item-types/{type}/fields/{ref}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Item Types Fields
      parameters:
        - name: type
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-item-types record
      responses:
        '200':
          description: Retrieve c-item-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Item Types Fields
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
      parameters:
        - name: type
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-item-types record
      responses:
        '200':
          description: deletes a single c-item-types based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Item Types Fields
      parameters:
        - name: type
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-items:
    get:
      deprecated: false
      description: Find all the c-items's records
      responses:
        '200':
          description: Retrieve c-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-items
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-items record
      responses:
        '200':
          description: Retrieve c-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-items
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-items'
  /c-items/count:
    get:
      deprecated: false
      description: Retrieve the number of c-items documents
      responses:
        '200':
          description: Retrieve c-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-items
      parameters: []
  /c-items/{id}:
    get:
      deprecated: false
      description: Find one c-items record
      responses:
        '200':
          description: Retrieve c-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-items
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-items record
      responses:
        '200':
          description: Retrieve c-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-items
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-items'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-items record
      responses:
        '200':
          description: deletes a single c-items based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-items
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-lists:
    get:
      deprecated: false
      description: Find all the c-lists's records
      responses:
        '200':
          description: Retrieve c-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-lists
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-lists record
      responses:
        '200':
          description: Retrieve c-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-lists
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-lists'
  /c-lists/public:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-lists
      parameters: []
  /c-lists/count:
    get:
      deprecated: false
      description: Retrieve the number of c-lists documents
      responses:
        '200':
          description: Retrieve c-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-lists
      parameters: []
  /c-lists/public/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-lists
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-lists/{id}:
    put:
      deprecated: false
      description: Update a single c-lists record
      responses:
        '200':
          description: Retrieve c-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-lists
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-lists'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-lists record
      responses:
        '200':
          description: deletes a single c-lists based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-lists
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-menu-items:
    get:
      deprecated: false
      description: Find all the c-menu-items's records
      responses:
        '200':
          description: Retrieve c-menu-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-menu-items
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-menu-items record
      responses:
        '200':
          description: Retrieve c-menu-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-menu-items
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-menu-items'
  /c-menu-items/count:
    get:
      deprecated: false
      description: Retrieve the number of c-menu-items documents
      responses:
        '200':
          description: Retrieve c-menu-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-menu-items
      parameters: []
  /c-menu-items/{id}:
    get:
      deprecated: false
      description: Find one c-menu-items record
      responses:
        '200':
          description: Retrieve c-menu-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-menu-items
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-menu-items record
      responses:
        '200':
          description: Retrieve c-menu-items document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-menu-items
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-menu-items'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-menu-items record
      responses:
        '200':
          description: deletes a single c-menu-items based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-menu-items
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-panel-views:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-panel-view'
  /c-panel-views/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      parameters: []
  /c-panel-views/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-panel-view'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-panel-views/process/{id}/apprise/{ref}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-panel-views/extract/{id}:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panel-view
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-panels:
    get:
      deprecated: false
      description: Find all the c-panels's records
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-panels record
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-panels'
  /c-panels/count:
    get:
      deprecated: false
      description: Retrieve the number of c-panels documents
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters: []
  /c-panels/{id}:
    get:
      deprecated: false
      description: Find one c-panels record
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-panels record
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-panels'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-panels record
      responses:
        '200':
          description: deletes a single c-panels based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-panels/{panelId}/fields:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    post:
      deprecated: false
      description: Create a new c-panels record
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-panels/{panelId}/fields/{ref}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-panels record
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-panels record
      responses:
        '200':
          description: deletes a single c-panels based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-panels/{panelId}/apprises:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    post:
      deprecated: false
      description: Create a new c-panels record
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /c-panels/{panelId}/apprises/{ref}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-panels record
      responses:
        '200':
          description: Retrieve c-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-panels record
      responses:
        '200':
          description: deletes a single c-panels based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-panels
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: ref
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-item-types/{panelId}/fields/{id}:
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Unclassified
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
      parameters:
        - name: panelId
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-screens:
    get:
      deprecated: false
      description: Find all the c-screens's records
      responses:
        '200':
          description: Retrieve c-screens document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-screens
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-screens record
      responses:
        '200':
          description: Retrieve c-screens document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-screens
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-screens'
  /c-screens/count:
    get:
      deprecated: false
      description: Retrieve the number of c-screens documents
      responses:
        '200':
          description: Retrieve c-screens document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-screens
      parameters: []
  /c-screens/{id}:
    get:
      deprecated: false
      description: Find one c-screens record
      responses:
        '200':
          description: Retrieve c-screens document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-screens
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-screens record
      responses:
        '200':
          description: Retrieve c-screens document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-screens
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-screens'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-screens record
      responses:
        '200':
          description: deletes a single c-screens based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-screens
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-stage-routes:
    get:
      deprecated: false
      description: Find all the c-stage-routes's records
      responses:
        '200':
          description: Retrieve c-stage-routes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-routes
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-stage-routes record
      responses:
        '200':
          description: Retrieve c-stage-routes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-routes
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-stage-routes'
  /c-stage-routes/count:
    get:
      deprecated: false
      description: Retrieve the number of c-stage-routes documents
      responses:
        '200':
          description: Retrieve c-stage-routes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-routes
      parameters: []
  /c-stage-routes/{id}:
    get:
      deprecated: false
      description: Find one c-stage-routes record
      responses:
        '200':
          description: Retrieve c-stage-routes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-routes
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-stage-routes record
      responses:
        '200':
          description: Retrieve c-stage-routes document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-routes
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-stage-routes'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-stage-routes record
      responses:
        '200':
          description: deletes a single c-stage-routes based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-routes
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-stage-statuses:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-status
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-status
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-stage-status'
  /c-stage-statuses/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-status
      parameters: []
  /c-stage-statuses/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-status
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-status
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-stage-status'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-status
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-stage-tasks:
    get:
      deprecated: false
      description: Find all the c-stage-tasks's records
      responses:
        '200':
          description: Retrieve c-stage-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-tasks
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-stage-tasks record
      responses:
        '200':
          description: Retrieve c-stage-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-tasks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-stage-tasks'
  /c-stage-tasks/count:
    get:
      deprecated: false
      description: Retrieve the number of c-stage-tasks documents
      responses:
        '200':
          description: Retrieve c-stage-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-tasks
      parameters: []
  /c-stage-tasks/{id}:
    get:
      deprecated: false
      description: Find one c-stage-tasks record
      responses:
        '200':
          description: Retrieve c-stage-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-tasks
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-stage-tasks record
      responses:
        '200':
          description: Retrieve c-stage-tasks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-tasks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-stage-tasks'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-stage-tasks record
      responses:
        '200':
          description: deletes a single c-stage-tasks based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-stage-tasks
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-type-conditionals:
    get:
      deprecated: false
      description: Find all the c-type-conditionals's records
      responses:
        '200':
          description: Retrieve c-type-conditionals document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-conditionals
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-type-conditionals record
      responses:
        '200':
          description: Retrieve c-type-conditionals document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-conditionals
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-conditionals'
  /c-type-conditionals/count:
    get:
      deprecated: false
      description: Retrieve the number of c-type-conditionals documents
      responses:
        '200':
          description: Retrieve c-type-conditionals document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-conditionals
      parameters: []
  /c-type-conditionals/{id}:
    get:
      deprecated: false
      description: Find one c-type-conditionals record
      responses:
        '200':
          description: Retrieve c-type-conditionals document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-conditionals
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-type-conditionals record
      responses:
        '200':
          description: Retrieve c-type-conditionals document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-conditionals
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-conditionals'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-type-conditionals record
      responses:
        '200':
          description: deletes a single c-type-conditionals based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-conditionals
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-type-flows:
    get:
      deprecated: false
      description: Find all the c-type-flows's records
      responses:
        '200':
          description: Retrieve c-type-flows document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-flows
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-type-flows record
      responses:
        '200':
          description: Retrieve c-type-flows document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-flows
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-flows'
  /c-type-flows/count:
    get:
      deprecated: false
      description: Retrieve the number of c-type-flows documents
      responses:
        '200':
          description: Retrieve c-type-flows document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-flows
      parameters: []
  /c-type-flows/{id}:
    get:
      deprecated: false
      description: Find one c-type-flows record
      responses:
        '200':
          description: Retrieve c-type-flows document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-flows
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-type-flows record
      responses:
        '200':
          description: Retrieve c-type-flows document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-flows
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-flows'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-type-flows record
      responses:
        '200':
          description: deletes a single c-type-flows based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-flows
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-type-lists:
    get:
      deprecated: false
      description: Find all the c-type-lists's records
      responses:
        '200':
          description: Retrieve c-type-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-lists
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-type-lists record
      responses:
        '200':
          description: Retrieve c-type-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-lists
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-lists'
  /c-type-lists/count:
    get:
      deprecated: false
      description: Retrieve the number of c-type-lists documents
      responses:
        '200':
          description: Retrieve c-type-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-lists
      parameters: []
  /c-type-lists/{id}:
    get:
      deprecated: false
      description: Find one c-type-lists record
      responses:
        '200':
          description: Retrieve c-type-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-lists
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-type-lists record
      responses:
        '200':
          description: Retrieve c-type-lists document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-lists
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-lists'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-type-lists record
      responses:
        '200':
          description: deletes a single c-type-lists based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-lists
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-type-panels:
    get:
      deprecated: false
      description: Find all the c-type-panels's records
      responses:
        '200':
          description: Retrieve c-type-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-panels
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-type-panels record
      responses:
        '200':
          description: Retrieve c-type-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-panels'
  /c-type-panels/count:
    get:
      deprecated: false
      description: Retrieve the number of c-type-panels documents
      responses:
        '200':
          description: Retrieve c-type-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-panels
      parameters: []
  /c-type-panels/{id}:
    get:
      deprecated: false
      description: Find one c-type-panels record
      responses:
        '200':
          description: Retrieve c-type-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-panels
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-type-panels record
      responses:
        '200':
          description: Retrieve c-type-panels document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-panels
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-panels'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-type-panels record
      responses:
        '200':
          description: deletes a single c-type-panels based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-panels
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-type-reports:
    get:
      deprecated: false
      description: Find all the c-type-reports's records
      responses:
        '200':
          description: Retrieve c-type-reports document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-reports
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new c-type-reports record
      responses:
        '200':
          description: Retrieve c-type-reports document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-reports
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-reports'
  /c-type-reports/count:
    get:
      deprecated: false
      description: Retrieve the number of c-type-reports documents
      responses:
        '200':
          description: Retrieve c-type-reports document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-reports
      parameters: []
  /c-type-reports/{id}:
    get:
      deprecated: false
      description: Find one c-type-reports record
      responses:
        '200':
          description: Retrieve c-type-reports document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-reports
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single c-type-reports record
      responses:
        '200':
          description: Retrieve c-type-reports document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-reports
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-reports'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single c-type-reports record
      responses:
        '200':
          description: deletes a single c-type-reports based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-reports
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-type-reports/delete/{id}:
    put:
      deprecated: false
      description: Update a single c-type-reports record
      responses:
        '200':
          description: Retrieve c-type-reports document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-reports
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /c-stage-triggers:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-triggers
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-triggers
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-triggers'
  /c-stage-triggers/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-triggers
      parameters: []
  /c-stage-triggers/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-triggers
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-triggers
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewC-type-triggers'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - C-type-triggers
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /con-question-subtype:
    get:
      deprecated: false
      description: Find all the con-question-subtype's records
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new con-question-subtype record
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCon-question-subtype'
  /con-question-subtype/count:
    get:
      deprecated: false
      description: Retrieve the number of con-question-subtype documents
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      parameters: []
  /con-question-subtype/{id}:
    get:
      deprecated: false
      description: Find one con-question-subtype record
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single con-question-subtype record
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCon-question-subtype'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single con-question-subtype record
      responses:
        '200':
          description: deletes a single con-question-subtype based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /con-question-subtype/remove-subtype:
    post:
      deprecated: false
      description: Create a new con-question-subtype record
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-question-subtype/update-subtype:
    post:
      deprecated: false
      description: Create a new con-question-subtype record
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-question-subtype/only:
    post:
      deprecated: false
      description: Create a new con-question-subtype record
      responses:
        '200':
          description: Retrieve con-question-subtype document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-subtype
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-question-types:
    get:
      deprecated: false
      description: Find all the con-question-types's records
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new con-question-types record
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCon-question-types'
  /con-question-types/count:
    get:
      deprecated: false
      description: Retrieve the number of con-question-types documents
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      parameters: []
  /con-question-types/{id}:
    get:
      deprecated: false
      description: Find one con-question-types record
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single con-question-types record
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCon-question-types'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single con-question-types record
      responses:
        '200':
          description: deletes a single con-question-types based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /con-question-types/remove-type:
    post:
      deprecated: false
      description: Create a new con-question-types record
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-question-types/update-type:
    post:
      deprecated: false
      description: Create a new con-question-types record
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-question-types/only:
    post:
      deprecated: false
      description: Create a new con-question-types record
      responses:
        '200':
          description: Retrieve con-question-types document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-question-types
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-questions/my/{ticket}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters:
        - name: ticket
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /con-questions:
    get:
      deprecated: false
      description: Find all the con-questions's records
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCon-questions'
  /con-questions/answered:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters: []
  /con-questions/my:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters: []
  /con-questions/in-charge:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters: []
  /con-questions/count:
    get:
      deprecated: false
      description: Retrieve the number of con-questions documents
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters: []
  /con-questions/{id}:
    get:
      deprecated: false
      description: Find one con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCon-questions'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single con-questions record
      responses:
        '200':
          description: deletes a single con-questions based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /con-questions/ticket/:
    post:
      deprecated: false
      description: Create a new con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-questions/categorize:
    post:
      deprecated: false
      description: Create a new con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-questions/assign-operator:
    post:
      deprecated: false
      description: Create a new con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-questions/search/:
    post:
      deprecated: false
      description: Create a new con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-questions/new-question:
    post:
      deprecated: false
      description: Create a new con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /con-questions/test-file:
    post:
      deprecated: false
      description: Create a new con-questions record
      responses:
        '200':
          description: Retrieve con-questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Con-questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /document-versions:
    get:
      deprecated: false
      description: Find all the document-versions's records
      responses:
        '200':
          description: Retrieve document-versions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document-versions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Versions
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new document-versions record
      responses:
        '200':
          description: Retrieve document-versions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewDocument-versions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Versions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDocument-versions'
  /document-versions/count:
    get:
      deprecated: false
      description: Retrieve the number of document-versions documents
      responses:
        '200':
          description: Retrieve document-versions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document-versions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Versions
      parameters: []
  /document-versions/{id}:
    get:
      deprecated: false
      description: Find one document-versions record
      responses:
        '200':
          description: Retrieve document-versions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document-versions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Versions
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single document-versions record
      responses:
        '200':
          description: Retrieve document-versions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewDocument-versions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Versions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDocument-versions'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single document-versions record
      responses:
        '200':
          description: deletes a single document-versions based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Document Versions
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /ent-monitorings:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Ent-monitoring
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Ent-monitoring
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEnt-monitoring'
  /ent-monitorings/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Ent-monitoring
      parameters: []
  /ent-monitorings/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Ent-monitoring
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Ent-monitoring
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEnt-monitoring'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Ent-monitoring
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /group-adresses:
    get:
      deprecated: false
      description: Find all the group-adresses's records
      responses:
        '200':
          description: Retrieve group-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-adresses
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new group-adresses record
      responses:
        '200':
          description: Retrieve group-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-adresses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-adresses'
  /group-adresses/count:
    get:
      deprecated: false
      description: Retrieve the number of group-adresses documents
      responses:
        '200':
          description: Retrieve group-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-adresses
      parameters: []
  /group-adresses/{id}:
    get:
      deprecated: false
      description: Find one group-adresses record
      responses:
        '200':
          description: Retrieve group-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-adresses
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single group-adresses record
      responses:
        '200':
          description: Retrieve group-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-adresses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-adresses'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single group-adresses record
      responses:
        '200':
          description: deletes a single group-adresses based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-adresses
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /group-email-templates:
    get:
      deprecated: false
      description: Find all the group-email-templates's records
      responses:
        '200':
          description: Retrieve group-email-templates document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-email-templates
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new group-email-templates record
      responses:
        '200':
          description: Retrieve group-email-templates document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-email-templates
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-email-templates'
  /group-email-templates/count:
    get:
      deprecated: false
      description: Retrieve the number of group-email-templates documents
      responses:
        '200':
          description: Retrieve group-email-templates document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-email-templates
      parameters: []
  /group-email-templates/{id}:
    get:
      deprecated: false
      description: Find one group-email-templates record
      responses:
        '200':
          description: Retrieve group-email-templates document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-email-templates
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single group-email-templates record
      responses:
        '200':
          description: Retrieve group-email-templates document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-email-templates
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-email-templates'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single group-email-templates record
      responses:
        '200':
          description: deletes a single group-email-templates based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-email-templates
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /group-invites:
    get:
      deprecated: false
      description: Find all the group-invites's records
      responses:
        '200':
          description: Retrieve group-invites document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-invites
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new group-invites record
      responses:
        '200':
          description: Retrieve group-invites document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-invites
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-invites'
  /group-invites/count:
    get:
      deprecated: false
      description: Retrieve the number of group-invites documents
      responses:
        '200':
          description: Retrieve group-invites document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-invites
      parameters: []
  /group-invites/{id}:
    get:
      deprecated: false
      description: Find one group-invites record
      responses:
        '200':
          description: Retrieve group-invites document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-invites
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single group-invites record
      responses:
        '200':
          description: Retrieve group-invites document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-invites
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-invites'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single group-invites record
      responses:
        '200':
          description: deletes a single group-invites based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-invites
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /group-licenses:
    get:
      deprecated: false
      description: Find all the group-licenses's records
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new group-licenses record
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-licenses'
  /group-licenses/availables:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      parameters: []
  /group-licenses/count:
    get:
      deprecated: false
      description: Retrieve the number of group-licenses documents
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      parameters: []
  /group-licenses/{id}:
    get:
      deprecated: false
      description: Find one group-licenses record
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single group-licenses record
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-licenses'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single group-licenses record
      responses:
        '200':
          description: deletes a single group-licenses based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /group-licenses/to-member:
    post:
      deprecated: false
      description: Create a new group-licenses record
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /group-licenses/rmv-member:
    post:
      deprecated: false
      description: Create a new group-licenses record
      responses:
        '200':
          description: Retrieve group-licenses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-licenses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /group-logos:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-logo
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-logo
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-logo'
  /group-logos/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-logo
      parameters: []
  /group-logos/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-logo
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-logo
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-logo'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-logo
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /group-members:
    get:
      deprecated: false
      description: Find all the group-members's records
      responses:
        '200':
          description: Retrieve group-members document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-members
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new group-members record
      responses:
        '200':
          description: Retrieve group-members document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-members
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-members'
  /group-members/count:
    get:
      deprecated: false
      description: Retrieve the number of group-members documents
      responses:
        '200':
          description: Retrieve group-members document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-members
      parameters: []
  /group-members/{id}:
    get:
      deprecated: false
      description: Find one group-members record
      responses:
        '200':
          description: Retrieve group-members document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-members
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single group-members record
      responses:
        '200':
          description: Retrieve group-members document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-members
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup-members'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single group-members record
      responses:
        '200':
          description: deletes a single group-members based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group-members
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /groups:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup'
  /groups/availables:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      parameters: []
  /groups/group:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      parameters: []
  /groups/group/member:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      parameters: []
  /groups/group/members:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      parameters: []
  /groups/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      parameters: []
  /groups/{id}:
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /groups/rmv-member:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Group
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /groups/rmv-user-group:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Unclassified
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /module-groups:
    get:
      deprecated: false
      description: Find all the module-groups's records
      responses:
        '200':
          description: Retrieve module-groups document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Module-groups
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new module-groups record
      responses:
        '200':
          description: Retrieve module-groups document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Module-groups
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModule-groups'
  /module-groups/count:
    get:
      deprecated: false
      description: Retrieve the number of module-groups documents
      responses:
        '200':
          description: Retrieve module-groups document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Module-groups
      parameters: []
  /module-groups/{id}:
    get:
      deprecated: false
      description: Find one module-groups record
      responses:
        '200':
          description: Retrieve module-groups document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Module-groups
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single module-groups record
      responses:
        '200':
          description: Retrieve module-groups document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Module-groups
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModule-groups'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single module-groups record
      responses:
        '200':
          description: deletes a single module-groups based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Module-groups
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /modules:
    get:
      deprecated: false
      description: Find all the modules's records
      responses:
        '200':
          description: Retrieve modules document(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modules'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Modules
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new modules record
      responses:
        '200':
          description: Retrieve modules document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modules'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Modules
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModules'
  /modules/count:
    get:
      deprecated: false
      description: Retrieve the number of modules documents
      responses:
        '200':
          description: Retrieve modules document(s)
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Modules
      parameters: []
  /modules/{id}:
    get:
      deprecated: false
      description: Find one modules record
      responses:
        '200':
          description: Retrieve modules document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modules'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Modules
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single modules record
      responses:
        '200':
          description: Retrieve modules document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modules'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Modules
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewModules'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single modules record
      responses:
        '200':
          description: deletes a single modules based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Modules
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /auth-external:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Newspapers
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /questions/public:
    post:
      deprecated: false
      description: Create a new questions record
      responses:
        '200':
          description: Retrieve questions document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /questions:
    get:
      deprecated: false
      description: Find all the questions's records
      responses:
        '200':
          description: Retrieve questions document(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Questions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Questions
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new questions record
      responses:
        '200':
          description: Retrieve questions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewQuestions'
  /questions/count:
    get:
      deprecated: false
      description: Retrieve the number of questions documents
      responses:
        '200':
          description: Retrieve questions document(s)
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Questions
      parameters: []
  /questions/{id}:
    get:
      deprecated: false
      description: Find one questions record
      responses:
        '200':
          description: Retrieve questions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single questions record
      responses:
        '200':
          description: Retrieve questions document(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Questions
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewQuestions'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single questions record
      responses:
        '200':
          description: deletes a single questions based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /sendmail-templates:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail-template
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail-template
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSendmail-template'
  /sendmail-templates/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail-template
      parameters: []
  /sendmail-templates/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail-template
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail-template
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSendmail-template'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail-template
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /sendmails/closing:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /sendmails:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sendmail'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sendmail'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSendmail'
  /sendmails/count:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      parameters: []
  /sendmails/{id}:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sendmail'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sendmail'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSendmail'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a record
      responses:
        '200':
          description: deletes a single record based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /sendmails/uri:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Sendmail
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /survey-answer-comments:
    get:
      deprecated: false
      description: Find all the survey-answer-comments's records
      responses:
        '200':
          description: Retrieve survey-answer-comments document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-comments
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new survey-answer-comments record
      responses:
        '200':
          description: Retrieve survey-answer-comments document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-comments
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSurvey-answer-comments'
  /survey-answer-comments/count:
    get:
      deprecated: false
      description: Retrieve the number of survey-answer-comments documents
      responses:
        '200':
          description: Retrieve survey-answer-comments document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-comments
      parameters: []
  /survey-answer-comments/{id}:
    get:
      deprecated: false
      description: Find one survey-answer-comments record
      responses:
        '200':
          description: Retrieve survey-answer-comments document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-comments
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single survey-answer-comments record
      responses:
        '200':
          description: Retrieve survey-answer-comments document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-comments
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSurvey-answer-comments'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single survey-answer-comments record
      responses:
        '200':
          description: deletes a single survey-answer-comments based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-comments
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /survey-answer-feedbacks:
    get:
      deprecated: false
      description: Find all the survey-answer-feedbacks's records
      responses:
        '200':
          description: Retrieve survey-answer-feedbacks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-feedbacks
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new survey-answer-feedbacks record
      responses:
        '200':
          description: Retrieve survey-answer-feedbacks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-feedbacks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSurvey-answer-feedbacks'
  /survey-answer-feedbacks/count:
    get:
      deprecated: false
      description: Retrieve the number of survey-answer-feedbacks documents
      responses:
        '200':
          description: Retrieve survey-answer-feedbacks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-feedbacks
      parameters: []
  /survey-answer-feedbacks/{id}:
    get:
      deprecated: false
      description: Find one survey-answer-feedbacks record
      responses:
        '200':
          description: Retrieve survey-answer-feedbacks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-feedbacks
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single survey-answer-feedbacks record
      responses:
        '200':
          description: Retrieve survey-answer-feedbacks document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-feedbacks
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSurvey-answer-feedbacks'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single survey-answer-feedbacks record
      responses:
        '200':
          description: deletes a single survey-answer-feedbacks based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Survey-answer-feedbacks
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /uri-validations:
    post:
      deprecated: false
      description: Create a new record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Uri-validations
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /user-adresses:
    get:
      deprecated: false
      description: Find all the user-adresses's records
      responses:
        '200':
          description: Retrieve user-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-adresses
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new user-adresses record
      responses:
        '200':
          description: Retrieve user-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-adresses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-adresses'
  /user-adresses/count:
    get:
      deprecated: false
      description: Retrieve the number of user-adresses documents
      responses:
        '200':
          description: Retrieve user-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-adresses
      parameters: []
  /user-adresses/{id}:
    get:
      deprecated: false
      description: Find one user-adresses record
      responses:
        '200':
          description: Retrieve user-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-adresses
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single user-adresses record
      responses:
        '200':
          description: Retrieve user-adresses document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-adresses
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-adresses'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single user-adresses record
      responses:
        '200':
          description: deletes a single user-adresses based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-adresses
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /user-images:
    get:
      deprecated: false
      description: Find all the user-images's records
      responses:
        '200':
          description: Retrieve user-images document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-images
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new user-images record
      responses:
        '200':
          description: Retrieve user-images document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-images
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-images'
  /user-images/count:
    get:
      deprecated: false
      description: Retrieve the number of user-images documents
      responses:
        '200':
          description: Retrieve user-images document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-images
      parameters: []
  /user-images/{id}:
    get:
      deprecated: false
      description: Find one user-images record
      responses:
        '200':
          description: Retrieve user-images document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-images
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single user-images record
      responses:
        '200':
          description: Retrieve user-images document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-images
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-images'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single user-images record
      responses:
        '200':
          description: deletes a single user-images based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-images
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /user-offices:
    get:
      deprecated: false
      description: Find all the user-offices's records
      responses:
        '200':
          description: Retrieve user-offices document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-offices
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new user-offices record
      responses:
        '200':
          description: Retrieve user-offices document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-offices
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-offices'
  /user-offices/count:
    get:
      deprecated: false
      description: Retrieve the number of user-offices documents
      responses:
        '200':
          description: Retrieve user-offices document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-offices
      parameters: []
  /user-offices/{id}:
    get:
      deprecated: false
      description: Find one user-offices record
      responses:
        '200':
          description: Retrieve user-offices document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-offices
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single user-offices record
      responses:
        '200':
          description: Retrieve user-offices document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-offices
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-offices'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single user-offices record
      responses:
        '200':
          description: deletes a single user-offices based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-offices
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /user-offices/group-set-office:
    post:
      deprecated: false
      description: Create a new user-offices record
      responses:
        '200':
          description: Retrieve user-offices document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-offices
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /user-phones:
    get:
      deprecated: false
      description: Find all the user-phones's records
      responses:
        '200':
          description: Retrieve user-phones document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-phones
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new user-phones record
      responses:
        '200':
          description: Retrieve user-phones document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-phones
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-phones'
  /user-phones/count:
    get:
      deprecated: false
      description: Retrieve the number of user-phones documents
      responses:
        '200':
          description: Retrieve user-phones document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-phones
      parameters: []
  /user-phones/{id}:
    get:
      deprecated: false
      description: Find one user-phones record
      responses:
        '200':
          description: Retrieve user-phones document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-phones
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single user-phones record
      responses:
        '200':
          description: Retrieve user-phones document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-phones
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser-phones'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single user-phones record
      responses:
        '200':
          description: deletes a single user-phones based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - User-phones
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /users-infos:
    get:
      deprecated: false
      description: Find all the users-infos's records
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
  /users-infos/count:
    get:
      deprecated: false
      description: Retrieve the number of users-infos documents
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      parameters: []
  /users-infos/module:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      parameters: []
  /users-infos/sync-uri:
    get:
      deprecated: false
      description: ''
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      parameters: []
  /users-infos/{id}:
    get:
      deprecated: false
      description: Find one users-infos record
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update a single users-infos record
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUsers-infos'
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete a single users-infos record
      responses:
        '200':
          description: deletes a single users-infos based on the ID supplied
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /users-infos/token:
    post:
      deprecated: false
      description: Create a new users-infos record
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /users-infos/register:
    post:
      deprecated: false
      description: Create a new users-infos record
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /users-infos/register-batch:
    post:
      deprecated: false
      description: Create a new users-infos record
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /users-infos/security:
    post:
      deprecated: false
      description: Create a new users-infos record
      responses:
        '200':
          description: Retrieve users-infos document(s)
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /groups/active/{id}:
    put:
      deprecated: false
      description: Update a record
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Users-infos
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /email/:
    post:
      deprecated: false
      description: Send an email
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Email - Email
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /email/test:
    post:
      deprecated: false
      description: Send an test email
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Email - Email
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /email/settings:
    get:
      deprecated: false
      description: Get the email settings
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Email - Email
      parameters: []
  /upload/:
    post:
      deprecated: false
      description: Upload a file
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Upload - File
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /upload/files/count:
    get:
      deprecated: false
      description: Retrieve the total number of uploaded files
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Upload - File
      parameters: []
  /upload/files:
    get:
      deprecated: false
      description: Retrieve all file documents
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Upload - File
      parameters: []
  /upload/files/{id}:
    get:
      deprecated: false
      description: Retrieve a single file depending on its id
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Upload - File
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    delete:
      deprecated: false
      description: Delete an uploaded file
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Upload - File
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /upload/search/{id}:
    get:
      deprecated: false
      description: Search for an uploaded file
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Upload - File
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /users-permissions/roles/{id}:
    get:
      deprecated: false
      description: Retrieve a role depending on its id
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPermissionsRole'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - Role
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /users-permissions/roles:
    get:
      deprecated: false
      description: Retrieve all role documents
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersPermissionsRole'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - Role
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
    post:
      deprecated: false
      description: Create a new role
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPermissionsRole'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - Role
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUsersPermissionsRole'
  /users-permissions/roles/{role}:
    put:
      deprecated: false
      description: Update a role
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPermissionsRole'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - Role
      parameters:
        - name: role
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUsersPermissionsRole'
    delete:
      deprecated: false
      description: Delete a role
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - Role
      parameters:
        - name: role
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /users-permissions/search/{id}:
    get:
      deprecated: false
      description: Search for users
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersPermissionsUser'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - User
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
  /connect/*:
    get:
      deprecated: false
      description: Connect a provider
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - User
      parameters: []
  /auth/local:
    post:
      deprecated: false
      description: Login a user using the identifiers email and password
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  identifier:
                    type: string
                    example: user@email.com
                  password:
                    type: string
                    example: passwd
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - identifier
                  - password
                properties:
                  identifier:
                    type: string
                    example: user@email.com
                  password:
                    type: string
                    example: passwd
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Local Auth
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                identifier:
                  type: string
                  example: user@email.com
                password:
                  type: string
                  example: passwd             
  /auth/local/register:
    post:
      deprecated: false
      description: Register a new user with the default role
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPermissionsUser'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Local Auth
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUsersPermissionsUser'
  /auth/{provider}/callback:
    get:
      deprecated: false
      description: Successfull redirection after approving a provider
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Local Auth
      parameters:
        - name: provider
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
  /auth/forgot-password:
    post:
      deprecated: false
      description: Send the reset password email link
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Local Auth
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /auth/reset-password:
    post:
      deprecated: false
      description: Reset user password with a code (resetToken)
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Local Auth
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /auth/email-confirmation:
    get:
      deprecated: false
      description: Validate a user account
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Local Auth
      parameters: []
  /auth/send-email-confirmation:
    post:
      deprecated: false
      description: Send a confirmation email to user
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - Local Auth
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              properties:
                foo:
                  type: string
  /users:
    get:
      deprecated: false
      description: Retrieve all user documents
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersPermissionsUser'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - User
      parameters:
        - name: _limit
          in: query
          required: false
          description: Maximum number of results possible
          schema:
            type: integer
          deprecated: false
        - name: _sort
          in: query
          required: false
          description: Sort according to a specific field.
          schema:
            type: string
          deprecated: false
        - name: _start
          in: query
          required: false
          description: Skip a specific number of entries (especially useful for pagination)
          schema:
            type: integer
          deprecated: false
        - name: '='
          in: query
          required: false
          description: Get entries that matches exactly your input
          schema:
            type: string
          deprecated: false
        - name: _ne
          in: query
          required: false
          description: Get records that are not equals to something
          schema:
            type: string
          deprecated: false
        - name: _lt
          in: query
          required: false
          description: Get record that are lower than a value
          schema:
            type: string
          deprecated: false
        - name: _lte
          in: query
          required: false
          description: Get records that are lower than or equal to a value
          schema:
            type: string
          deprecated: false
        - name: _gt
          in: query
          required: false
          description: Get records that are greater than a value
          schema:
            type: string
          deprecated: false
        - name: _gte
          in: query
          required: false
          description: Get records that are greater than  or equal a value
          schema:
            type: string
          deprecated: false
        - name: _contains
          in: query
          required: false
          description: Get records that contains a value
          schema:
            type: string
          deprecated: false
        - name: _containss
          in: query
          required: false
          description: Get records that contains (case sensitive) a value
          schema:
            type: string
          deprecated: false
        - name: _in
          in: query
          required: false
          description: Get records that matches any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
        - name: _nin
          in: query
          required: false
          description: Get records that doesn't match any value in the array of values
          schema:
            type: array
            items:
              type: string
          deprecated: false
  /users/me:
    get:
      deprecated: false
      description: Retrieve the logged in user information
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPermissionsUser'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - User
      parameters: []
  /users/{id}:
    get:
      deprecated: false
      description: Retrieve a single user depending on his id
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPermissionsUser'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - User
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
    put:
      deprecated: false
      description: Update an existing user
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPermissionsUser'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - User
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUsersPermissionsUser'
    delete:
      deprecated: false
      description: Delete an existing user
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                properties:
                  foo:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: ''
      tags:
        - UsersPermissions - User
      parameters:
        - name: id
          in: path
          description: ''
          deprecated: false
          required: true
          schema:
            type: string
components:
  schemas:
    C-actions:
      required:
        - id
        - name
        - access_level
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        icon:
          type: string
        color:
          type: string
        access_level:
          type: integer
          default: 0
        type:
          type: string
          default: setup
          enum:
            - auto
            - setup
        services:
          type: object
        stage_types:
          type: object
        slug:
          type: string
        has_file:
          type: boolean
    NewC-actions:
      required:
        - name
        - access_level
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        module:
          type: string
        icon:
          type: string
        color:
          type: string
        access_level:
          type: integer
          default: 0
        type:
          type: string
          default: setup
          enum:
            - auto
            - setup
        services:
          type: object
        stage_types:
          type: object
        slug:
          type: string
        has_file:
          type: boolean
        created_by:
          type: string
        updated_by:
          type: string
    C-document-templates:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        blocks:
          type: object
        status:
          type: string
          enum:
            - active
            - inactive
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        file:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-document-templates:
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        blocks:
          type: object
        status:
          type: string
          enum:
            - active
            - inactive
        module:
          type: string
        group:
          type: string
        type:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-external-tasks:
      required:
        - id
      properties:
        id:
          type: string
        email:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        hash:
          type: string
        status:
          type: string
          default: pending
          enum:
            - pending
            - working
            - complete
            - canceled
        data:
          type: object
        item_task:
          required:
            - id
            - status
          properties:
            id:
              type: string
            flow_item:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            data:
              type: object
            task:
              type: string
            work_status:
              type: string
              enum:
                - waiting
                - working
                - complete
            assigned_users:
              type: array
              items:
                type: string
            type:
              type: string
              enum:
                - automation
                - default
            module:
              type: string
            group:
              type: string
            updated_by_user:
              type: string
            task_log:
              type: object
            file:
              type: string
            external_task:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        data_config:
          type: object
        file:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-external-tasks:
      properties:
        email:
          type: string
        group:
          type: string
        module:
          type: string
        hash:
          type: string
        status:
          type: string
          default: pending
          enum:
            - pending
            - working
            - complete
            - canceled
        data:
          type: object
        item_task:
          type: string
        data_config:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    C-fields:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        refId:
          type: string
        options:
          type: object
        cFormat:
          type: object
        config:
          type: object
        opt_config:
          type: object
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        type:
          type: string
        show_item_details:
          type: boolean
          default: false
        module_groups:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              users:
                type: array
                items:
                  type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              image:
                type: string
              access_level:
                type: integer
              module:
                type: string
              owner_group:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
    NewC-fields:
      required:
        - name
      properties:
        group:
          type: string
        module:
          type: string
        name:
          type: string
        refId:
          type: string
        options:
          type: object
        cFormat:
          type: object
        config:
          type: object
        opt_config:
          type: object
        item_type:
          type: string
        type:
          type: string
        show_item_details:
          type: boolean
          default: false
        module_groups:
          type: array
          items:
            type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-files:
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        file:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        created_item_type:
          type: string
        created_stage:
          type: string
        created_form:
          type: string
        type:
          type: string
          default: attachment
          enum:
            - doc_template
            - attachment
        c_item:
          required:
            - id
            - reference
            - status
          properties:
            id:
              type: string
            reference:
              type: string
            user:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            type:
              type: string
            data:
              type: object
            request_email:
              type: string
            answer_history:
              type: object
            form_result:
              type: string
            document:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        created_field:
          type: string
        user_upload:
          type: boolean
          default: false
    NewC-files:
      properties:
        name:
          type: string
        description:
          type: string
        group:
          type: string
        module:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        user:
          type: string
        created_item_type:
          type: string
        created_stage:
          type: string
        created_form:
          type: string
        type:
          type: string
          default: attachment
          enum:
            - doc_template
            - attachment
        c_item:
          type: string
        created_field:
          type: string
        user_upload:
          type: boolean
          default: false
        created_by:
          type: string
        updated_by:
          type: string
    C-flow-erros:
      required:
        - id
      properties:
        id:
          type: string
        item_reference:
          type: string
        flow_name:
          type: string
        stage_name:
          type: string
        error:
          type: string
        error_data:
          type: object
        severity:
          type: string
          default: moderate
          enum:
            - low
            - moderate
            - high
            - critical
        status:
          type: string
          default: review
          enum:
            - review
            - reviewed
            - removed
            - resolved
        group_by:
          type: string
        task_name:
          type: string
        route_name:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-flow-erros:
      properties:
        item_reference:
          type: string
        flow_name:
          type: string
        stage_name:
          type: string
        error:
          type: string
        error_data:
          type: object
        severity:
          type: string
          default: moderate
          enum:
            - low
            - moderate
            - high
            - critical
        status:
          type: string
          default: review
          enum:
            - review
            - reviewed
            - removed
            - resolved
        group_by:
          type: string
        task_name:
          type: string
        route_name:
          type: string
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-flow-item-task-logs:
      required:
        - id
        - event
      properties:
        id:
          type: string
        flow_item_task:
          required:
            - id
            - status
          properties:
            id:
              type: string
            flow_item:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            data:
              type: object
            task:
              type: string
            work_status:
              type: string
              enum:
                - waiting
                - working
                - complete
            assigned_users:
              type: array
              items:
                type: string
            type:
              type: string
              enum:
                - automation
                - default
            module:
              type: string
            group:
              type: string
            updated_by_user:
              type: string
            task_log:
              type: object
            file:
              type: string
            external_task:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        event:
          type: string
          enum:
            - create
            - update
            - delete
        work_status:
          type: string
          enum:
            - waiting
            - working
            - complete
        summary:
          type: string
        description:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        start_type:
          type: string
        data:
          type: object
    NewC-flow-item-task-logs:
      required:
        - event
      properties:
        flow_item_task:
          type: string
        event:
          type: string
          enum:
            - create
            - update
            - delete
        work_status:
          type: string
          enum:
            - waiting
            - working
            - complete
        summary:
          type: string
        description:
          type: string
        user:
          type: string
        start_type:
          type: string
        data:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    C-flow-item-tasks:
      required:
        - id
        - status
      properties:
        id:
          type: string
        flow_item:
          required:
            - id
          properties:
            id:
              type: string
            item:
              type: string
            flow:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            stage:
              type: string
            run_status:
              type: string
              enum:
                - running
                - complete
                - removed
            stage_status:
              type: string
            stages_log:
              type: object
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        data:
          type: object
        task:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            data:
              type: object
            action:
              type: string
            sla:
              type: integer
            users:
              type: array
              items:
                type: string
            stage:
              type: string
            module_groups:
              type: array
              items:
                type: string
            responsibility_type:
              type: string
              enum:
                - everybody
                - request_user
                - users
                - module_groups
                - status
            sla_type:
              type: string
              enum:
                - hours
                - days
            sla_origin:
              type: string
              enum:
                - item_created
                - task_created
                - field_ref
                - now
                - field
                - created_at
            triggers:
              type: array
              items:
                type: string
            start_type:
              type: string
              enum:
                - stage_enter
                - await_trigger
                - periodic
            hex_color:
              type: string
            icon:
              type: string
            show_fields:
              type: boolean
            sla_field_ref:
              type: string
            update_status:
              type: boolean
            update_statusOn:
              type: string
              enum:
                - create
                - update
                - delete
            update_statusTo:
              type: string
            update_onWorkStatus:
              type: string
              enum:
                - waiting
                - working
                - complete
            group:
              type: string
            module:
              type: string
            task_share:
              type: boolean
            show_entity:
              type: boolean
            auto_confirm:
              type: boolean
            form:
              type: string
            fill_type:
              type: string
              enum:
                - fields
                - form
            sm_recipient_type:
              type: string
              enum:
                - request_user
                - module_groups
                - email_list
            sm_module_groups:
              type: array
              items:
                type: string
            active_survey:
              type: boolean
            sm_emails:
              type: object
            sm_email_template:
              type: string
            ff_fieldsAvailable:
              type: object
            editor_permissions:
              type: object
            editor_review:
              type: object
            show_document:
              type: boolean
            created_by:
              type: string
            updated_by:
              type: string
        work_status:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        assigned_users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        type:
          type: string
          default: default
          enum:
            - automation
            - default
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        updated_by_user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        task_log:
          type: object
        file:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        external_task:
          required:
            - id
          properties:
            id:
              type: string
            email:
              type: string
            group:
              type: string
            module:
              type: string
            hash:
              type: string
            status:
              type: string
              enum:
                - pending
                - working
                - complete
                - canceled
            data:
              type: object
            item_task:
              type: string
            data_config:
              type: object
            file:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-flow-item-tasks:
      required:
        - status
      properties:
        flow_item:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        data:
          type: object
        task:
          type: string
        work_status:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        assigned_users:
          type: array
          items:
            type: string
        type:
          type: string
          default: default
          enum:
            - automation
            - default
        module:
          type: string
        group:
          type: string
        updated_by_user:
          type: string
        task_log:
          type: object
        external_task:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-flow-items:
      required:
        - id
      properties:
        id:
          type: string
        item:
          required:
            - id
            - reference
            - status
          properties:
            id:
              type: string
            reference:
              type: string
            user:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            type:
              type: string
            data:
              type: object
            request_email:
              type: string
            answer_history:
              type: object
            form_result:
              type: string
            document:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        flow:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            group:
              type: string
            module:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            stages:
              type: array
              items:
                type: string
            start_type:
              type: string
              enum:
                - always
                - conditionals
                - form
            conditionals:
              type: object
            first_stage:
              type: string
            icon:
              type: string
            hex_color:
              type: string
            timeline:
              type: object
            use_timeline:
              type: boolean
            form_ident:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        stage:
          required:
            - id
            - name
            - progress_type
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            tasks:
              type: array
              items:
                type: string
            progress_type:
              type: string
              enum:
                - waiting
                - working
                - complete
            flow:
              type: string
            routes:
              type: array
              items:
                type: string
            is_start:
              type: boolean
            hex_color:
              type: string
            icon:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        run_status:
          type: string
          default: running
          enum:
            - running
            - complete
            - removed
        stage_status:
          required:
            - id
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            hex_color:
              type: string
            stage:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            group:
              type: string
            module:
              type: string
            in_charge_users:
              type: array
              items:
                type: string
            icon:
              type: string
            default:
              type: boolean
            created_by:
              type: string
            updated_by:
              type: string
        stages_log:
          type: object
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-flow-items:
      properties:
        item:
          type: string
        flow:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        stage:
          type: string
        run_status:
          type: string
          default: running
          enum:
            - running
            - complete
            - removed
        stage_status:
          type: string
        stages_log:
          type: object
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-flow-stages:
      required:
        - id
        - name
        - progress_type
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        tasks:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
              data:
                type: object
              action:
                type: string
              sla:
                type: integer
              users:
                type: array
                items:
                  type: string
              stage:
                type: string
              module_groups:
                type: array
                items:
                  type: string
              responsibility_type:
                type: string
                enum:
                  - everybody
                  - request_user
                  - users
                  - module_groups
                  - status
              sla_type:
                type: string
                enum:
                  - hours
                  - days
              sla_origin:
                type: string
                enum:
                  - item_created
                  - task_created
                  - field_ref
                  - now
                  - field
                  - created_at
              triggers:
                type: array
                items:
                  type: string
              start_type:
                type: string
                enum:
                  - stage_enter
                  - await_trigger
                  - periodic
              hex_color:
                type: string
              icon:
                type: string
              show_fields:
                type: boolean
              sla_field_ref:
                type: string
              update_status:
                type: boolean
              update_statusOn:
                type: string
                enum:
                  - create
                  - update
                  - delete
              update_statusTo:
                type: string
              update_onWorkStatus:
                type: string
                enum:
                  - waiting
                  - working
                  - complete
              group:
                type: string
              module:
                type: string
              task_share:
                type: boolean
              show_entity:
                type: boolean
              auto_confirm:
                type: boolean
              form:
                type: string
              fill_type:
                type: string
                enum:
                  - fields
                  - form
              sm_recipient_type:
                type: string
                enum:
                  - request_user
                  - module_groups
                  - email_list
              sm_module_groups:
                type: array
                items:
                  type: string
              active_survey:
                type: boolean
              sm_emails:
                type: object
              sm_email_template:
                type: string
              ff_fieldsAvailable:
                type: object
              editor_permissions:
                type: object
              editor_review:
                type: object
              show_document:
                type: boolean
              created_by:
                type: string
              updated_by:
                type: string
        progress_type:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        flow:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            group:
              type: string
            module:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            stages:
              type: array
              items:
                type: string
            start_type:
              type: string
              enum:
                - always
                - conditionals
                - form
            conditionals:
              type: object
            first_stage:
              type: string
            icon:
              type: string
            hex_color:
              type: string
            timeline:
              type: object
            use_timeline:
              type: boolean
            form_ident:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        routes:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              to_stage:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
              name:
                type: string
              description:
                type: string
              stage:
                type: string
              conditionals:
                type: object
              icon:
                type: string
              hex_color:
                type: string
              group:
                type: string
              module:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        is_start:
          type: boolean
          default: false
        hex_color:
          type: string
          default: f39c12
        icon:
          type: string
    NewC-flow-stages:
      required:
        - name
        - progress_type
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        item_type:
          type: string
        tasks:
          type: array
          items:
            type: string
        progress_type:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        flow:
          type: string
        routes:
          type: array
          items:
            type: string
        is_start:
          type: boolean
          default: false
        hex_color:
          type: string
          default: f39c12
        icon:
          type: string
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-folders:
      required:
        - id
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        c_form:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            visibility:
              type: string
              enum:
                - private
                - public
            item_autocreation:
              type: boolean
            layout:
              type: string
              enum:
                - card
                - tab
                - step
                - fieldset
            identification:
              type: string
            elements:
              type: object
            answer_limit:
              type: boolean
            congrats_message:
              type: string
            redirect:
              type: object
            has_template:
              type: boolean
            create_question:
              type: boolean
            screening:
              type: boolean
            question_field:
              type: string
            data_privacy:
              type: string
              enum:
                - optional
                - private
                - public
            created_by:
              type: string
            updated_by:
              type: string
        c_fields:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              group:
                type: string
              module:
                type: string
              name:
                type: string
              refId:
                type: string
              options:
                type: object
              cFormat:
                type: object
              config:
                type: object
              opt_config:
                type: object
              item_type:
                type: string
              type:
                type: string
              show_item_details:
                type: boolean
              module_groups:
                type: array
                items:
                  type: string
              created_by:
                type: string
              updated_by:
                type: string
        name:
          type: string
        ordination:
          type: integer
        type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        visible:
          type: boolean
          default: false
        type_folder:
          type: string
          enum:
            - data
            - form
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        reference:
          type: string
        icon:
          type: string
    NewC-folders:
      properties:
        group:
          type: string
        module:
          type: string
        c_form:
          type: string
        c_fields:
          type: array
          items:
            type: string
        name:
          type: string
        ordination:
          type: integer
        type:
          type: string
        visible:
          type: boolean
          default: false
        type_folder:
          type: string
          enum:
            - data
            - form
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        reference:
          type: string
        icon:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-form-results:
      required:
        - id
      properties:
        id:
          type: string
        status:
          type: string
          default: new
          enum:
            - new
            - pending
            - item_created
            - closed
            - approved
            - rejected
            - completed
            - canceled
            - archived
            - deleted
        form:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            visibility:
              type: string
              enum:
                - private
                - public
            item_autocreation:
              type: boolean
            layout:
              type: string
              enum:
                - card
                - tab
                - step
                - fieldset
            identification:
              type: string
            elements:
              type: object
            answer_limit:
              type: boolean
            congrats_message:
              type: string
            redirect:
              type: object
            has_template:
              type: boolean
            create_question:
              type: boolean
            screening:
              type: boolean
            question_field:
              type: string
            data_privacy:
              type: string
              enum:
                - optional
                - private
                - public
            created_by:
              type: string
            updated_by:
              type: string
        data:
          type: object
        email:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        item:
          required:
            - id
            - reference
            - status
          properties:
            id:
              type: string
            reference:
              type: string
            user:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            type:
              type: string
            data:
              type: object
            request_email:
              type: string
            answer_history:
              type: object
            form_result:
              type: string
            document:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        question:
          required:
            - id
            - status
          properties:
            id:
              type: string
            group:
              type: string
            module:
              type: string
            status:
              type: string
              enum:
                - new
                - pending
                - rejected
                - complete
                - canceled
                - archived
                - deleted
            data:
              type: object
            attachments:
              type: object
            content_raw:
              type: string
            content_clear:
              type: string
            content_normalized:
              type: string
            origin:
              type: string
              enum:
                - teams
                - zapier_email
                - web
                - app
                - form_private
                - form_public
            email:
              type: string
            content_extracted:
              type: string
            answer_raw:
              type: string
            answer_clear:
              type: string
            subject:
              type: string
            identification:
              type: string
            user:
              type: string
            subject_type:
              type: string
            subject_subtype:
              type: string
            form_result:
              type: string
            data_privacy:
              type: string
              enum:
                - private
                - public
            created_by:
              type: string
            updated_by:
              type: string
        document:
          type: object
        origin:
          type: string
          enum:
            - zapier_email
            - teams
            - form_private
            - form_public
        data_privacy:
          type: string
          default: private
          enum:
            - private
            - public
    NewC-form-results:
      properties:
        status:
          type: string
          default: new
          enum:
            - new
            - pending
            - item_created
            - closed
            - approved
            - rejected
            - completed
            - canceled
            - archived
            - deleted
        form:
          type: string
        data:
          type: object
        email:
          type: string
        group:
          type: string
        module:
          type: string
        user:
          type: string
        item:
          type: string
        question:
          type: string
        document:
          type: object
        origin:
          type: string
          enum:
            - zapier_email
            - teams
            - form_private
            - form_public
        data_privacy:
          type: string
          default: private
          enum:
            - private
            - public
        created_by:
          type: string
        updated_by:
          type: string
    C-forms:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        visibility:
          type: string
          default: private
          enum:
            - private
            - public
        item_autocreation:
          type: boolean
          default: false
        layout:
          type: string
          default: card
          enum:
            - card
            - tab
            - step
            - fieldset
        identification:
          type: string
        elements:
          type: object
        answer_limit:
          type: boolean
          default: false
        congrats_message:
          type: string
        redirect:
          type: object
        has_template:
          type: boolean
          default: false
        create_question:
          type: boolean
          default: false
        screening:
          type: boolean
          default: false
        question_field:
          type: string
        data_privacy:
          type: string
          enum:
            - optional
            - private
            - public
    NewC-forms:
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        module:
          type: string
        group:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        item_type:
          type: string
        visibility:
          type: string
          default: private
          enum:
            - private
            - public
        item_autocreation:
          type: boolean
          default: false
        layout:
          type: string
          default: card
          enum:
            - card
            - tab
            - step
            - fieldset
        identification:
          type: string
        elements:
          type: object
        answer_limit:
          type: boolean
          default: false
        congrats_message:
          type: string
        redirect:
          type: object
        has_template:
          type: boolean
          default: false
        create_question:
          type: boolean
          default: false
        screening:
          type: boolean
          default: false
        question_field:
          type: string
        data_privacy:
          type: string
          enum:
            - optional
            - private
            - public
        created_by:
          type: string
        updated_by:
          type: string
    C-item-logs:
      required:
        - id
      properties:
        id:
          type: string
        item:
          required:
            - id
            - reference
            - status
          properties:
            id:
              type: string
            reference:
              type: string
            user:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            type:
              type: string
            data:
              type: object
            request_email:
              type: string
            answer_history:
              type: object
            form_result:
              type: string
            document:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        origin:
          type: string
          enum:
            - stage
            - trigger
            - flow_item
            - route
            - stage_task
        type:
          type: string
          enum:
            - created
            - activated
            - start
            - stop
            - complete
            - removed
        work_status:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        summary:
          type: string
        description:
          type: string
        field_data:
          type: array
          items:
            type: object
            required:
              - id
              - ref
              - value
            properties:
              id:
                type: string
              ref:
                type: string
              value:
                type: object
              field_type:
                type: string
                enum:
                  - inputText
                  - editor
                  - textArea
                  - calendar
                  - radioButton
                  - inputNumber
                  - slider
                  - inputSwitch
                  - inputMask
                  - dropdown
                  - uploadFile
                  - multiSelect
                  - autoComplete
                  - autoRefer
                  - chips
                  - recursiveField
              config:
                type: object
        custom_data:
          type: object
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        route:
          required:
            - id
            - name
          properties:
            id:
              type: string
            to_stage:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            name:
              type: string
            description:
              type: string
            stage:
              type: string
            conditionals:
              type: object
            icon:
              type: string
            hex_color:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        trigger:
          required:
            - id
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            task:
              type: string
            conditionals:
              type: object
            status:
              type: string
              enum:
                - active
                - inactive
            stage:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        flow_item:
          required:
            - id
          properties:
            id:
              type: string
            item:
              type: string
            flow:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            stage:
              type: string
            run_status:
              type: string
              enum:
                - running
                - complete
                - removed
            stage_status:
              type: string
            stages_log:
              type: object
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        item_task:
          required:
            - id
            - status
          properties:
            id:
              type: string
            flow_item:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            data:
              type: object
            task:
              type: string
            work_status:
              type: string
              enum:
                - waiting
                - working
                - complete
            assigned_users:
              type: array
              items:
                type: string
            type:
              type: string
              enum:
                - automation
                - default
            module:
              type: string
            group:
              type: string
            updated_by_user:
              type: string
            task_log:
              type: object
            file:
              type: string
            external_task:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-item-logs:
      properties:
        item:
          type: string
        origin:
          type: string
          enum:
            - stage
            - trigger
            - flow_item
            - route
            - stage_task
        type:
          type: string
          enum:
            - created
            - activated
            - start
            - stop
            - complete
            - removed
        work_status:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        summary:
          type: string
        description:
          type: string
        field_data:
          type: array
          items:
            type: object
            required:
              - id
              - ref
              - value
            properties:
              id:
                type: string
              ref:
                type: string
              value:
                type: object
              field_type:
                type: string
                enum:
                  - inputText
                  - editor
                  - textArea
                  - calendar
                  - radioButton
                  - inputNumber
                  - slider
                  - inputSwitch
                  - inputMask
                  - dropdown
                  - uploadFile
                  - multiSelect
                  - autoComplete
                  - autoRefer
                  - chips
                  - recursiveField
              config:
                type: object
        custom_data:
          type: object
        user:
          type: string
        route:
          type: string
        trigger:
          type: string
        flow_item:
          type: string
        item_task:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-item-notes:
      required:
        - id
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        item:
          required:
            - id
            - reference
            - status
          properties:
            id:
              type: string
            reference:
              type: string
            user:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            type:
              type: string
            data:
              type: object
            request_email:
              type: string
            answer_history:
              type: object
            form_result:
              type: string
            document:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        content:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - pending
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-item-notes:
      properties:
        user:
          type: string
        item:
          type: string
        content:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - pending
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-item-types:
      required:
        - id
        - name
        - status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - blocked
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        fields:
          type: array
          items:
            type: object
            required:
              - id
              - name
              - reference
              - type
              - group
            properties:
              id:
                type: string
              name:
                type: string
              reference:
                type: string
              start_field:
                type: boolean
                default: true
              has_default:
                type: boolean
                default: false
              default:
                type: string
              help_text:
                type: string
              placeholder:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
              label:
                type: string
              type:
                type: string
                enum:
                  - inputText
                  - editor
                  - textArea
                  - calendar
                  - radioButton
                  - inputNumber
                  - slider
                  - inputSwitch
                  - inputMask
                  - dropdown
                  - uploadFile
                  - multiSelect
                  - autoComplete
                  - autoRefer
                  - chips
                  - inputMorph
              priority:
                type: integer
              alert:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                  severity:
                    type: string
                    enum:
                      - info
                      - success
                      - warn
                      - error
                  message:
                    type: string
                  closable:
                    type: boolean
              group:
                type: string
              required:
                type: boolean
                default: false
              width:
                type: string
                default: w-12 md:w-12
              type_config:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                  opt_key_value:
                    type: string
                  in_buttons:
                    type: boolean
                  opt_key_label:
                    type: string
                  opt_findBy_param:
                    type: string
                  in_max:
                    type: number
                  opt_entity:
                    type: string
                  opt_origin:
                    type: string
                    enum:
                      - fetch_entity
                      - cList
                  opt_cList:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                      properties:
                        id:
                          type: string
                        label:
                          type: string
                        value:
                          type: string
                  in_min:
                    type: number
                  opt_findBy_key:
                    type: string
                  in_mode:
                    type: string
                    enum:
                      - decimal
                      - currency
                  or_conditionals:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - ref
                        - op
                      properties:
                        id:
                          type: string
                        item_type:
                          type: string
                        status:
                          type: string
                          enum:
                            - active
                            - inactive
                        name:
                          type: string
                        description:
                          type: string
                        ref:
                          type: string
                        op:
                          type: string
                          enum:
                            - eq
                            - ne
                            - lt
                            - gt
                            - lte
                            - gte
                            - in
                            - nin
                            - contains
                            - ncontains
                            - containss
                            - ncontainss
                            - 'null'
                            - notNull
                        value:
                          type: object
                        group:
                          type: string
                        module:
                          type: string
                        created_by:
                          type: string
                        updated_by:
                          type: string
                  and_conditionals:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - ref
                        - op
                      properties:
                        id:
                          type: string
                        item_type:
                          type: string
                        status:
                          type: string
                          enum:
                            - active
                            - inactive
                        name:
                          type: string
                        description:
                          type: string
                        ref:
                          type: string
                        op:
                          type: string
                          enum:
                            - eq
                            - ne
                            - lt
                            - gt
                            - lte
                            - gte
                            - in
                            - nin
                            - contains
                            - ncontains
                            - containss
                            - ncontainss
                            - 'null'
                            - notNull
                        value:
                          type: object
                        group:
                          type: string
                        module:
                          type: string
                        created_by:
                          type: string
                        updated_by:
                          type: string
                  opt_search:
                    type: boolean
                  im_mask:
                    type: string
                  in_maxFractionDigits:
                    type: integer
                  in_minFractionDigits:
                    type: integer
                  in_prefix:
                    type: string
                  in_suffix:
                    type: string
                  in_currency:
                    type: string
                    enum:
                      - BRL
                      - USD
                      - EUR
                      - INR
                      - JPY
                  up_maxSize:
                    type: integer
                  up_maxFiles:
                    type: integer
                  up_extensions:
                    type: object
                  it_limit:
                    type: integer
                  opt_fieldRef:
                    type: string
              post_update:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    post_func:
                      type: string
                      enum:
                        - optConstructor
                        - previewOptConstructor
                        - updateRecursive
                    post_params:
                      type: object
        module_groups:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              users:
                type: array
                items:
                  type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              image:
                type: string
              access_level:
                type: integer
              module:
                type: string
              owner_group:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        icon:
          type: string
        hex_color:
          type: string
        has_template:
          type: boolean
        converted:
          type: boolean
        c_fields:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              group:
                type: string
              module:
                type: string
              name:
                type: string
              refId:
                type: string
              options:
                type: object
              cFormat:
                type: object
              config:
                type: object
              opt_config:
                type: object
              item_type:
                type: string
              type:
                type: string
              show_item_details:
                type: boolean
              module_groups:
                type: array
                items:
                  type: string
              created_by:
                type: string
              updated_by:
                type: string
        rating_type:
          type: string
          enum:
            - icon
            - slide
            - emoji
            - star
        scale_number:
          type: integer
        rating_mode:
          type: string
          enum:
            - manual
            - automatic
        copy_list:
          type: object
        evaluation:
          type: boolean
        invite_text:
          type: string
        copy_list_users:
          type: object
        active_folders:
          type: object
    NewC-item-types:
      required:
        - name
        - status
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - blocked
        group:
          type: string
        module:
          type: string
        fields:
          type: array
          items:
            type: object
            required:
              - id
              - name
              - reference
              - type
              - group
            properties:
              id:
                type: string
              name:
                type: string
              reference:
                type: string
              start_field:
                type: boolean
                default: true
              has_default:
                type: boolean
                default: false
              default:
                type: string
              help_text:
                type: string
              placeholder:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
              label:
                type: string
              type:
                type: string
                enum:
                  - inputText
                  - editor
                  - textArea
                  - calendar
                  - radioButton
                  - inputNumber
                  - slider
                  - inputSwitch
                  - inputMask
                  - dropdown
                  - uploadFile
                  - multiSelect
                  - autoComplete
                  - autoRefer
                  - chips
                  - inputMorph
              priority:
                type: integer
              alert:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                  severity:
                    type: string
                    enum:
                      - info
                      - success
                      - warn
                      - error
                  message:
                    type: string
                  closable:
                    type: boolean
              group:
                type: string
              required:
                type: boolean
                default: false
              width:
                type: string
                default: w-12 md:w-12
              type_config:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                  opt_key_value:
                    type: string
                  in_buttons:
                    type: boolean
                  opt_key_label:
                    type: string
                  opt_findBy_param:
                    type: string
                  in_max:
                    type: number
                  opt_entity:
                    type: string
                  opt_origin:
                    type: string
                    enum:
                      - fetch_entity
                      - cList
                  opt_cList:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                      properties:
                        id:
                          type: string
                        label:
                          type: string
                        value:
                          type: string
                  in_min:
                    type: number
                  opt_findBy_key:
                    type: string
                  in_mode:
                    type: string
                    enum:
                      - decimal
                      - currency
                  or_conditionals:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - ref
                        - op
                      properties:
                        id:
                          type: string
                        item_type:
                          type: string
                        status:
                          type: string
                          enum:
                            - active
                            - inactive
                        name:
                          type: string
                        description:
                          type: string
                        ref:
                          type: string
                        op:
                          type: string
                          enum:
                            - eq
                            - ne
                            - lt
                            - gt
                            - lte
                            - gte
                            - in
                            - nin
                            - contains
                            - ncontains
                            - containss
                            - ncontainss
                            - 'null'
                            - notNull
                        value:
                          type: object
                        group:
                          type: string
                        module:
                          type: string
                        created_by:
                          type: string
                        updated_by:
                          type: string
                  and_conditionals:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - ref
                        - op
                      properties:
                        id:
                          type: string
                        item_type:
                          type: string
                        status:
                          type: string
                          enum:
                            - active
                            - inactive
                        name:
                          type: string
                        description:
                          type: string
                        ref:
                          type: string
                        op:
                          type: string
                          enum:
                            - eq
                            - ne
                            - lt
                            - gt
                            - lte
                            - gte
                            - in
                            - nin
                            - contains
                            - ncontains
                            - containss
                            - ncontainss
                            - 'null'
                            - notNull
                        value:
                          type: object
                        group:
                          type: string
                        module:
                          type: string
                        created_by:
                          type: string
                        updated_by:
                          type: string
                  opt_search:
                    type: boolean
                  im_mask:
                    type: string
                  in_maxFractionDigits:
                    type: integer
                  in_minFractionDigits:
                    type: integer
                  in_prefix:
                    type: string
                  in_suffix:
                    type: string
                  in_currency:
                    type: string
                    enum:
                      - BRL
                      - USD
                      - EUR
                      - INR
                      - JPY
                  up_maxSize:
                    type: integer
                  up_maxFiles:
                    type: integer
                  up_extensions:
                    type: object
                  it_limit:
                    type: integer
                  opt_fieldRef:
                    type: string
              post_update:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    post_func:
                      type: string
                      enum:
                        - optConstructor
                        - previewOptConstructor
                        - updateRecursive
                    post_params:
                      type: object
        module_groups:
          type: array
          items:
            type: string
        icon:
          type: string
        hex_color:
          type: string
        has_template:
          type: boolean
        converted:
          type: boolean
        c_fields:
          type: array
          items:
            type: string
        rating_type:
          type: string
          enum:
            - icon
            - slide
            - emoji
            - star
        scale_number:
          type: integer
        rating_mode:
          type: string
          enum:
            - manual
            - automatic
        copy_list:
          type: object
        evaluation:
          type: boolean
        invite_text:
          type: string
        copy_list_users:
          type: object
        active_folders:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    C-items:
      required:
        - id
        - reference
        - status
      properties:
        id:
          type: string
        reference:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        data:
          type: object
        request_email:
          type: string
        answer_history:
          type: object
        form_result:
          required:
            - id
          properties:
            id:
              type: string
            status:
              type: string
              enum:
                - new
                - pending
                - item_created
                - closed
                - approved
                - rejected
                - completed
                - canceled
                - archived
                - deleted
            form:
              type: string
            data:
              type: object
            email:
              type: string
            group:
              type: string
            module:
              type: string
            user:
              type: string
            item:
              type: string
            question:
              type: string
            document:
              type: object
            origin:
              type: string
              enum:
                - zapier_email
                - teams
                - form_private
                - form_public
            data_privacy:
              type: string
              enum:
                - private
                - public
            created_by:
              type: string
            updated_by:
              type: string
        document:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-items:
      required:
        - reference
        - status
      properties:
        reference:
          type: string
        user:
          type: string
        module:
          type: string
        group:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        type:
          type: string
        data:
          type: object
        request_email:
          type: string
        answer_history:
          type: object
        form_result:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-lists:
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        reference:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        options:
          type: object
    NewC-lists:
      properties:
        name:
          type: string
        description:
          type: string
        reference:
          type: string
        group:
          type: string
        module:
          type: string
        options:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    C-menu-items:
      required:
        - id
      properties:
        id:
          type: string
        type:
          type: string
          default: default
          enum:
            - default
            - profile
        category:
          type: string
        label:
          type: string
        icon:
          type: string
        data:
          type: object
        access_level:
          type: integer
          default: 0
        order:
          type: integer
          default: 0
        module_groups:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              users:
                type: array
                items:
                  type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              image:
                type: string
              access_level:
                type: integer
              module:
                type: string
              owner_group:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
    NewC-menu-items:
      properties:
        group:
          type: string
        module:
          type: string
        type:
          type: string
          default: default
          enum:
            - default
            - profile
        category:
          type: string
        label:
          type: string
        icon:
          type: string
        data:
          type: object
        access_level:
          type: integer
          default: 0
        order:
          type: integer
          default: 0
        module_groups:
          type: array
          items:
            type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-panel-view:
      required:
        - id
        - name
        - identifier
        - columns
      properties:
        id:
          type: string
        panel:
          required:
            - id
            - name
            - number_of_bases
          properties:
            id:
              type: string
            group:
              type: string
            module:
              type: string
            name:
              type: string
            description:
              type: string
            fields:
              type: object
            apprises:
              type: object
            status:
              type: string
              enum:
                - active
                - inactive
            number_of_bases:
              type: integer
            created_by:
              type: string
            updated_by:
              type: string
        name:
          type: string
        description:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        identifier:
          type: string
        columns:
          type: object
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        base_1:
          type: object
        base_2:
          type: object
        base_1_origin:
          type: string
        base_2_origin:
          type: string
        log_data:
          type: object
    NewC-panel-view:
      required:
        - name
        - identifier
        - columns
      properties:
        panel:
          type: string
        name:
          type: string
        description:
          type: string
        user:
          type: string
        identifier:
          type: string
        columns:
          type: object
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        module:
          type: string
        group:
          type: string
        base_1:
          type: object
        base_2:
          type: object
        base_1_origin:
          type: string
        base_2_origin:
          type: string
        log_data:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    C-panels:
      required:
        - id
        - name
        - number_of_bases
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        name:
          type: string
        description:
          type: string
        fields:
          type: array
          items:
            type: object
            required:
              - id
              - type
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              status:
                type: string
                default: active
                enum:
                  - active
                  - inactive
              reference:
                type: string
              type:
                type: string
                enum:
                  - value
                  - smallText
                  - bigText
                  - date
              apprise_types:
                type: object
        apprises:
          type: array
          items:
            type: object
            required:
              - id
              - type
              - name
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - value
                  - quantity
                  - general
              status:
                type: string
                default: active
                enum:
                  - active
                  - inactive
              name:
                type: string
              description:
                type: string
              group_rows_field:
                type: string
              col_list:
                type: object
              reference:
                type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        number_of_bases:
          type: integer
          default: 1
    NewC-panels:
      required:
        - name
        - number_of_bases
      properties:
        group:
          type: string
        module:
          type: string
        name:
          type: string
        description:
          type: string
        fields:
          type: array
          items:
            type: object
            required:
              - id
              - type
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              status:
                type: string
                default: active
                enum:
                  - active
                  - inactive
              reference:
                type: string
              type:
                type: string
                enum:
                  - value
                  - smallText
                  - bigText
                  - date
              apprise_types:
                type: object
        apprises:
          type: array
          items:
            type: object
            required:
              - id
              - type
              - name
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - value
                  - quantity
                  - general
              status:
                type: string
                default: active
                enum:
                  - active
                  - inactive
              name:
                type: string
              description:
                type: string
              group_rows_field:
                type: string
              col_list:
                type: object
              reference:
                type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        number_of_bases:
          type: integer
          default: 1
        created_by:
          type: string
        updated_by:
          type: string
    C-screens:
      required:
        - id
        - name
        - status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        path:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        data:
          type: object
        screen_type:
          type: string
          enum:
            - tasks
            - requests
            - custom
            - files
            - manageTasks
            - search
            - screening
            - myRequests
    NewC-screens:
      required:
        - name
        - status
      properties:
        name:
          type: string
        description:
          type: string
        path:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        group:
          type: string
        module:
          type: string
        data:
          type: object
        screen_type:
          type: string
          enum:
            - tasks
            - requests
            - custom
            - files
            - manageTasks
            - search
            - screening
            - myRequests
        created_by:
          type: string
        updated_by:
          type: string
    C-stage-routes:
      required:
        - id
        - name
      properties:
        id:
          type: string
        to_stage:
          required:
            - id
            - name
            - progress_type
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            tasks:
              type: array
              items:
                type: string
            progress_type:
              type: string
              enum:
                - waiting
                - working
                - complete
            flow:
              type: string
            routes:
              type: array
              items:
                type: string
            is_start:
              type: boolean
            hex_color:
              type: string
            icon:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        name:
          type: string
        description:
          type: string
        stage:
          required:
            - id
            - name
            - progress_type
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            tasks:
              type: array
              items:
                type: string
            progress_type:
              type: string
              enum:
                - waiting
                - working
                - complete
            flow:
              type: string
            routes:
              type: array
              items:
                type: string
            is_start:
              type: boolean
            hex_color:
              type: string
            icon:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        conditionals:
          type: object
          required:
            - id
          properties:
            id:
              type: string
            and_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
            or_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
        icon:
          type: string
        hex_color:
          type: string
          default: c0392b
    NewC-stage-routes:
      required:
        - name
      properties:
        to_stage:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        name:
          type: string
        description:
          type: string
        stage:
          type: string
        conditionals:
          type: object
          required:
            - id
          properties:
            id:
              type: string
            and_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
            or_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
        icon:
          type: string
        hex_color:
          type: string
          default: c0392b
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-stage-status:
      required:
        - id
        - status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        hex_color:
          type: string
          default: '#8e44ad'
        stage:
          required:
            - id
            - name
            - progress_type
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            tasks:
              type: array
              items:
                type: string
            progress_type:
              type: string
              enum:
                - waiting
                - working
                - complete
            flow:
              type: string
            routes:
              type: array
              items:
                type: string
            is_start:
              type: boolean
            hex_color:
              type: string
            icon:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          enum:
            - active
            - inactive
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        in_charge_users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        icon:
          type: string
        default:
          type: boolean
    NewC-stage-status:
      required:
        - status
      properties:
        name:
          type: string
        description:
          type: string
        hex_color:
          type: string
          default: '#8e44ad'
        stage:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
        group:
          type: string
        module:
          type: string
        in_charge_users:
          type: array
          items:
            type: string
        icon:
          type: string
        default:
          type: boolean
        created_by:
          type: string
        updated_by:
          type: string
    C-stage-tasks:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        data:
          type: object
        action:
          required:
            - id
            - name
            - access_level
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            module:
              type: string
            icon:
              type: string
            color:
              type: string
            access_level:
              type: integer
            type:
              type: string
              enum:
                - auto
                - setup
            services:
              type: object
            stage_types:
              type: object
            slug:
              type: string
            has_file:
              type: boolean
            created_by:
              type: string
            updated_by:
              type: string
        sla:
          type: integer
        users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        stage:
          required:
            - id
            - name
            - progress_type
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            tasks:
              type: array
              items:
                type: string
            progress_type:
              type: string
              enum:
                - waiting
                - working
                - complete
            flow:
              type: string
            routes:
              type: array
              items:
                type: string
            is_start:
              type: boolean
            hex_color:
              type: string
            icon:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        module_groups:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              users:
                type: array
                items:
                  type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              image:
                type: string
              access_level:
                type: integer
              module:
                type: string
              owner_group:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        responsibility_type:
          type: string
          default: users
          enum:
            - everybody
            - request_user
            - users
            - module_groups
            - status
        sla_type:
          type: string
          default: hours
          enum:
            - hours
            - days
        sla_origin:
          type: string
          default: item_created
          enum:
            - item_created
            - task_created
            - field_ref
            - now
            - field
            - created_at
        triggers:
          type: array
          items:
            required:
              - id
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              task:
                type: string
              conditionals:
                type: object
              status:
                type: string
                enum:
                  - active
                  - inactive
              stage:
                type: string
              group:
                type: string
              module:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        start_type:
          type: string
          default: await_trigger
          enum:
            - stage_enter
            - await_trigger
            - periodic
        hex_color:
          type: string
          default: 487eb0
        icon:
          type: string
        show_fields:
          type: boolean
        sla_field_ref:
          type: string
        update_status:
          type: boolean
        update_statusOn:
          type: string
          enum:
            - create
            - update
            - delete
        update_statusTo:
          required:
            - id
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            hex_color:
              type: string
            stage:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            group:
              type: string
            module:
              type: string
            in_charge_users:
              type: array
              items:
                type: string
            icon:
              type: string
            default:
              type: boolean
            created_by:
              type: string
            updated_by:
              type: string
        update_onWorkStatus:
          type: string
          enum:
            - waiting
            - working
            - complete
        task_share:
          type: boolean
          default: false
        show_entity:
          type: boolean
          default: false
        auto_confirm:
          type: boolean
          default: false
        form:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            visibility:
              type: string
              enum:
                - private
                - public
            item_autocreation:
              type: boolean
            layout:
              type: string
              enum:
                - card
                - tab
                - step
                - fieldset
            identification:
              type: string
            elements:
              type: object
            answer_limit:
              type: boolean
            congrats_message:
              type: string
            redirect:
              type: object
            has_template:
              type: boolean
            create_question:
              type: boolean
            screening:
              type: boolean
            question_field:
              type: string
            data_privacy:
              type: string
              enum:
                - optional
                - private
                - public
            created_by:
              type: string
            updated_by:
              type: string
        fill_type:
          type: string
          enum:
            - fields
            - form
        sm_recipient_type:
          type: string
          enum:
            - request_user
            - module_groups
            - email_list
        sm_module_groups:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              users:
                type: array
                items:
                  type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              image:
                type: string
              access_level:
                type: integer
              module:
                type: string
              owner_group:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        active_survey:
          type: boolean
          default: false
        sm_emails:
          type: object
        sm_email_template:
          required:
            - id
            - reference
            - body_html
            - subject
            - status
            - name
          properties:
            id:
              type: string
            module:
              type: string
            group:
              type: string
            reference:
              type: string
            body_html:
              type: string
            subject:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            replacements:
              type: object
            copy_list:
              type: object
            name:
              type: string
            default:
              type: boolean
            created_by:
              type: string
            updated_by:
              type: string
        ff_fieldsAvailable:
          type: object
        editor_permissions:
          type: object
        editor_review:
          type: object
        show_document:
          type: boolean
    NewC-stage-tasks:
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        data:
          type: object
        action:
          type: string
        sla:
          type: integer
        users:
          type: array
          items:
            type: string
        stage:
          type: string
        module_groups:
          type: array
          items:
            type: string
        responsibility_type:
          type: string
          default: users
          enum:
            - everybody
            - request_user
            - users
            - module_groups
            - status
        sla_type:
          type: string
          default: hours
          enum:
            - hours
            - days
        sla_origin:
          type: string
          default: item_created
          enum:
            - item_created
            - task_created
            - field_ref
            - now
            - field
            - created_at
        triggers:
          type: array
          items:
            type: string
        start_type:
          type: string
          default: await_trigger
          enum:
            - stage_enter
            - await_trigger
            - periodic
        hex_color:
          type: string
          default: 487eb0
        icon:
          type: string
        show_fields:
          type: boolean
        sla_field_ref:
          type: string
        update_status:
          type: boolean
        update_statusOn:
          type: string
          enum:
            - create
            - update
            - delete
        update_statusTo:
          type: string
        update_onWorkStatus:
          type: string
          enum:
            - waiting
            - working
            - complete
        group:
          type: string
        module:
          type: string
        task_share:
          type: boolean
          default: false
        show_entity:
          type: boolean
          default: false
        auto_confirm:
          type: boolean
          default: false
        form:
          type: string
        fill_type:
          type: string
          enum:
            - fields
            - form
        sm_recipient_type:
          type: string
          enum:
            - request_user
            - module_groups
            - email_list
        sm_module_groups:
          type: array
          items:
            type: string
        active_survey:
          type: boolean
          default: false
        sm_emails:
          type: object
        sm_email_template:
          type: string
        ff_fieldsAvailable:
          type: object
        editor_permissions:
          type: object
        editor_review:
          type: object
        show_document:
          type: boolean
        created_by:
          type: string
        updated_by:
          type: string
    C-table-charts:
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        original_header:
          type: string
        data:
          type: object
        cols:
          type: object
        type:
          type: string
          default: static
          enum:
            - static
            - reactive
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        config:
          type: object
        module_groups:
          type: array
          items:
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              users:
                type: array
                items:
                  type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              image:
                type: string
              access_level:
                type: integer
              module:
                type: string
              owner_group:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
    NewC-table-charts:
      properties:
        name:
          type: string
        description:
          type: string
        original_header:
          type: string
        data:
          type: object
        cols:
          type: object
        type:
          type: string
          default: static
          enum:
            - static
            - reactive
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        user:
          type: string
        module:
          type: string
        group:
          type: string
        config:
          type: object
        module_groups:
          type: array
          items:
            type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-type-conditionals:
      required:
        - id
        - name
        - ref
        - op
      properties:
        id:
          type: string
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        name:
          type: string
        description:
          type: string
        ref:
          type: string
        op:
          type: string
          enum:
            - eq
            - ne
            - lt
            - gt
            - lte
            - gte
            - in
            - nin
            - contains
            - ncontains
            - containss
            - ncontainss
            - 'null'
            - notNull
        value:
          type: object
    NewC-type-conditionals:
      required:
        - name
        - ref
        - op
      properties:
        item_type:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        name:
          type: string
        description:
          type: string
        ref:
          type: string
        op:
          type: string
          enum:
            - eq
            - ne
            - lt
            - gt
            - lte
            - gte
            - in
            - nin
            - contains
            - ncontains
            - containss
            - ncontainss
            - 'null'
            - notNull
        value:
          type: object
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-type-flows:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        stages:
          type: array
          items:
            required:
              - id
              - name
              - progress_type
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
              item_type:
                type: string
              tasks:
                type: array
                items:
                  type: string
              progress_type:
                type: string
                enum:
                  - waiting
                  - working
                  - complete
              flow:
                type: string
              routes:
                type: array
                items:
                  type: string
              is_start:
                type: boolean
              hex_color:
                type: string
              icon:
                type: string
              group:
                type: string
              module:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        start_type:
          type: string
          default: always
          enum:
            - always
            - conditionals
            - form
        conditionals:
          type: object
          required:
            - id
          properties:
            id:
              type: string
            and_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
            or_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
        first_stage:
          required:
            - id
            - name
            - progress_type
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            tasks:
              type: array
              items:
                type: string
            progress_type:
              type: string
              enum:
                - waiting
                - working
                - complete
            flow:
              type: string
            routes:
              type: array
              items:
                type: string
            is_start:
              type: boolean
            hex_color:
              type: string
            icon:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        icon:
          type: string
        hex_color:
          type: string
        timeline:
          type: object
        use_timeline:
          type: boolean
          default: false
        form_ident:
          type: object
    NewC-type-flows:
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        group:
          type: string
        module:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        item_type:
          type: string
        stages:
          type: array
          items:
            type: string
        start_type:
          type: string
          default: always
          enum:
            - always
            - conditionals
            - form
        conditionals:
          type: object
          required:
            - id
          properties:
            id:
              type: string
            and_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
            or_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
        first_stage:
          type: string
        icon:
          type: string
        hex_color:
          type: string
        timeline:
          type: object
        use_timeline:
          type: boolean
          default: false
        form_ident:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    C-type-lists:
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
    NewC-type-lists:
      properties:
        name:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-type-panels:
      required:
        - id
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        data:
          type: object
        name:
          type: string
        order:
          type: integer
          default: 0
    NewC-type-panels:
      properties:
        group:
          type: string
        module:
          type: string
        item_type:
          type: string
        data:
          type: object
        name:
          type: string
        order:
          type: integer
          default: 0
        created_by:
          type: string
        updated_by:
          type: string
    C-type-reports:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        fields:
          type: object
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        native_fields:
          type: object
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-type-reports:
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        fields:
          type: object
        group:
          type: string
        item_type:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        native_fields:
          type: object
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    C-type-triggers:
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        task:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            data:
              type: object
            action:
              type: string
            sla:
              type: integer
            users:
              type: array
              items:
                type: string
            stage:
              type: string
            module_groups:
              type: array
              items:
                type: string
            responsibility_type:
              type: string
              enum:
                - everybody
                - request_user
                - users
                - module_groups
                - status
            sla_type:
              type: string
              enum:
                - hours
                - days
            sla_origin:
              type: string
              enum:
                - item_created
                - task_created
                - field_ref
                - now
                - field
                - created_at
            triggers:
              type: array
              items:
                type: string
            start_type:
              type: string
              enum:
                - stage_enter
                - await_trigger
                - periodic
            hex_color:
              type: string
            icon:
              type: string
            show_fields:
              type: boolean
            sla_field_ref:
              type: string
            update_status:
              type: boolean
            update_statusOn:
              type: string
              enum:
                - create
                - update
                - delete
            update_statusTo:
              type: string
            update_onWorkStatus:
              type: string
              enum:
                - waiting
                - working
                - complete
            group:
              type: string
            module:
              type: string
            task_share:
              type: boolean
            show_entity:
              type: boolean
            auto_confirm:
              type: boolean
            form:
              type: string
            fill_type:
              type: string
              enum:
                - fields
                - form
            sm_recipient_type:
              type: string
              enum:
                - request_user
                - module_groups
                - email_list
            sm_module_groups:
              type: array
              items:
                type: string
            active_survey:
              type: boolean
            sm_emails:
              type: object
            sm_email_template:
              type: string
            ff_fieldsAvailable:
              type: object
            editor_permissions:
              type: object
            editor_review:
              type: object
            show_document:
              type: boolean
            created_by:
              type: string
            updated_by:
              type: string
        conditionals:
          type: object
          required:
            - id
          properties:
            id:
              type: string
            and_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
            or_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        stage:
          required:
            - id
            - name
            - progress_type
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            item_type:
              type: string
            tasks:
              type: array
              items:
                type: string
            progress_type:
              type: string
              enum:
                - waiting
                - working
                - complete
            flow:
              type: string
            routes:
              type: array
              items:
                type: string
            is_start:
              type: boolean
            hex_color:
              type: string
            icon:
              type: string
            group:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewC-type-triggers:
      properties:
        name:
          type: string
        description:
          type: string
        task:
          type: string
        conditionals:
          type: object
          required:
            - id
          properties:
            id:
              type: string
            and_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
            or_conditionals:
              type: array
              items:
                required:
                  - id
                  - name
                  - ref
                  - op
                properties:
                  id:
                    type: string
                  item_type:
                    type: string
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                  name:
                    type: string
                  description:
                    type: string
                  ref:
                    type: string
                  op:
                    type: string
                    enum:
                      - eq
                      - ne
                      - lt
                      - gt
                      - lte
                      - gte
                      - in
                      - nin
                      - contains
                      - ncontains
                      - containss
                      - ncontainss
                      - 'null'
                      - notNull
                  value:
                    type: object
                  group:
                    type: string
                  module:
                    type: string
                  created_by:
                    type: string
                  updated_by:
                    type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        stage:
          type: string
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Callback-dump:
      required:
        - id
        - status
      properties:
        id:
          type: string
        origin:
          type: string
        type_code:
          type: integer
          default: 0
        status:
          type: string
          default: new
          enum:
            - new
            - read
            - removed
        content_json:
          type: object
        content_any:
          type: string
    NewCallback-dump:
      required:
        - status
      properties:
        origin:
          type: string
        type_code:
          type: integer
          default: 0
        status:
          type: string
          default: new
          enum:
            - new
            - read
            - removed
        content_json:
          type: object
        content_any:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Cle-process-extracts:
      required:
        - id
        - numero_processo
      properties:
        id:
          type: string
        bipbop_ref:
          type: string
        request:
          required:
            - id
            - cnj_number
          properties:
            id:
              type: string
            cnj_number:
              type: string
            status:
              type: string
              enum:
                - ignore
                - processing
                - awaiting
                - delayed
                - extracting
                - update
                - error
                - success
            user:
              type: string
            bipbop_ref:
              type: string
            bipbop_xml:
              type: string
            cle_process_extracts:
              type: array
              items:
                type: string
            last_status:
              type: string
            exception:
              type: string
            ticket:
              type: string
            status_kurier:
              type: string
              enum:
                - ignore
                - processing
                - awaiting
                - delayed
                - extracting
                - update
                - error
                - success
            result_kurier:
              type: object
            status_escavador:
              type: string
              enum:
                - ignore
                - processing
                - awaiting
                - delayed
                - extracting
                - update
                - error
                - success
            result_escavador:
              type: object
            register_escavador:
              type: object
            exception_kurier:
              type: string
            exception_escavador:
              type: string
            status_escavador_last_mov:
              type: string
              enum:
                - ignore
                - processing
                - awaiting
                - delayed
                - extracting
                - update
                - error
                - success
            result_escavador_last_mov:
              type: object
            exception_escavador_last_mov:
              type: string
            documents:
              type: boolean
            can_extract_docs:
              type: boolean
            created_by:
              type: string
            updated_by:
              type: string
        numero_processo:
          type: string
        partes:
          type: object
        andamentos:
          type: object
        orgao:
          type: string
        comarca:
          type: string
        vara:
          type: string
        instancia:
          type: string
        valor_causa:
          type: string
        autuacao:
          type: string
        distribuicao:
          type: string
        advogados:
          type: object
        assunto:
          type: string
        classe:
          type: string
        url_processo:
          type: string
        area:
          type: string
        foro:
          type: string
        status_processo:
          type: string
        estado:
          type: string
        data_encerramento:
          type: string
        anexos:
          type: object
        data_source:
          type: string
          default: bipbop
          enum:
            - kurier
            - escavador
            - bipbop
        tipo_ocorrencia:
          type: string
        data_audiencia:
          type: string
        reu:
          type: string
        adv_reu:
          type: string
        autor:
          type: string
        adv_autor:
          type: string
        situacoes:
          type: object
        url:
          type: string
        dados:
          type: object
        data_arquivamento:
          type: string
    NewCle-process-extracts:
      required:
        - numero_processo
      properties:
        bipbop_ref:
          type: string
        request:
          type: string
        original_xml:
          type: string
        numero_processo:
          type: string
        partes:
          type: object
        andamentos:
          type: object
        orgao:
          type: string
        comarca:
          type: string
        vara:
          type: string
        instancia:
          type: string
        valor_causa:
          type: string
        autuacao:
          type: string
        distribuicao:
          type: string
        advogados:
          type: object
        assunto:
          type: string
        classe:
          type: string
        url_processo:
          type: string
        area:
          type: string
        extract_json:
          type: object
        foro:
          type: string
        status_processo:
          type: string
        estado:
          type: string
        data_encerramento:
          type: string
        anexos:
          type: object
        data_source:
          type: string
          default: bipbop
          enum:
            - kurier
            - escavador
            - bipbop
        tipo_ocorrencia:
          type: string
        data_audiencia:
          type: string
        reu:
          type: string
        adv_reu:
          type: string
        autor:
          type: string
        adv_autor:
          type: string
        situacoes:
          type: object
        url:
          type: string
        dados:
          type: object
        data_arquivamento:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Cle-process-requests:
      required:
        - id
        - cnj_number
      properties:
        id:
          type: string
        cnj_number:
          type: string
        status:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        exception:
          type: string
        ticket:
          type: string
        status_kurier:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        status_escavador:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        exception_kurier:
          type: string
        exception_escavador:
          type: string
        status_escavador_last_mov:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        result_escavador_last_mov:
          type: object
        exception_escavador_last_mov:
          type: string
        documents:
          type: boolean
          default: false
        can_extract_docs:
          type: boolean
          default: true
    NewCle-process-requests:
      required:
        - cnj_number
      properties:
        cnj_number:
          type: string
        status:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        user:
          type: string
        bipbop_ref:
          type: string
        bipbop_xml:
          type: string
        cle_process_extracts:
          type: array
          items:
            type: string
        last_status:
          type: string
        exception:
          type: string
        ticket:
          type: string
        status_kurier:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        result_kurier:
          type: object
        status_escavador:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        result_escavador:
          type: object
        register_escavador:
          type: object
        exception_kurier:
          type: string
        exception_escavador:
          type: string
        status_escavador_last_mov:
          type: string
          default: ignore
          enum:
            - ignore
            - processing
            - awaiting
            - delayed
            - extracting
            - update
            - error
            - success
        result_escavador_last_mov:
          type: object
        exception_escavador_last_mov:
          type: string
        documents:
          type: boolean
          default: false
        can_extract_docs:
          type: boolean
          default: true
        created_by:
          type: string
        updated_by:
          type: string
    Cle-process:
      required:
        - id
        - numero_processo
      properties:
        id:
          type: string
        numero_processo:
          type: string
        estado:
          type: string
        comarca:
          type: string
        foro:
          type: string
        vara:
          type: string
        distribuicao:
          type: string
        citacao:
          type: string
        acao:
          type: string
        instancia:
          type: string
        valor_causa:
          type: string
        encerramento:
          type: string
    NewCle-process:
      required:
        - numero_processo
      properties:
        numero_processo:
          type: string
        estado:
          type: string
        comarca:
          type: string
        foro:
          type: string
        vara:
          type: string
        distribuicao:
          type: string
        citacao:
          type: string
        acao:
          type: string
        instancia:
          type: string
        valor_causa:
          type: string
        encerramento:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Con-question-history:
      required:
        - id
        - description
        - description_full
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        question:
          required:
            - id
            - question
          properties:
            id:
              type: string
            id_integration:
              type: string
            group:
              type: string
            user:
              type: string
            type:
              type: string
            type_original:
              type: string
            identification:
              type: string
            keywords:
              type: object
            question:
              type: string
            final_answer:
              type: string
            hide:
              type: boolean
            status_custom:
              type: string
            status:
              type: integer
            words:
              type: object
            status_sync:
              type: string
              enum:
                - processing
                - awaiting
                - error
                - finish
            log_sync:
              type: string
            subtype:
              type: string
            last_status_id:
              type: integer
            question_normalized:
              type: string
            custom_data:
              type: object
            assigned_users:
              type: array
              items:
                type: string
            status_enum:
              type: string
              enum:
                - active
                - closed
                - inactive
                - disabled
                - reproved
            last_update:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        description:
          type: string
        description_full:
          type: string
        data:
          type: object
        hide:
          type: boolean
          default: false
        icon:
          type: string
          default: pi pi-star-o
        action:
          required:
            - id
          properties:
            id:
              type: string
            module:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            name:
              type: string
            description:
              type: string
            access_level:
              type: integer
            data:
              type: object
            conditions:
              type: object
            progress_types:
              type: object
            icon:
              type: string
            hex_color:
              type: string
            services:
              type: object
            type:
              type: string
              enum:
                - auto
                - setup
            created_by:
              type: string
            updated_by:
              type: string
    NewCon-question-history:
      required:
        - description
        - description_full
      properties:
        user:
          type: string
        question:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        description:
          type: string
        description_full:
          type: string
        data:
          type: object
        hide:
          type: boolean
          default: false
        icon:
          type: string
          default: pi pi-star-o
        action:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Con-question-ratings:
      required:
        - id
        - rating
        - status
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        question:
          required:
            - id
            - question
          properties:
            id:
              type: string
            id_integration:
              type: string
            group:
              type: string
            user:
              type: string
            type:
              type: string
            type_original:
              type: string
            identification:
              type: string
            keywords:
              type: object
            question:
              type: string
            final_answer:
              type: string
            hide:
              type: boolean
            status_custom:
              type: string
            status:
              type: integer
            words:
              type: object
            status_sync:
              type: string
              enum:
                - processing
                - awaiting
                - error
                - finish
            log_sync:
              type: string
            subtype:
              type: string
            last_status_id:
              type: integer
            question_normalized:
              type: string
            custom_data:
              type: object
            assigned_users:
              type: array
              items:
                type: string
            status_enum:
              type: string
              enum:
                - active
                - closed
                - inactive
                - disabled
                - reproved
            last_update:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        rating:
          type: integer
          default: 0
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        justification:
          type: string
    NewCon-question-ratings:
      required:
        - rating
        - status
      properties:
        user:
          type: string
        question:
          type: string
        rating:
          type: integer
          default: 0
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        justification:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Con-question-status-types:
      required:
        - id
        - name
        - progress
      properties:
        id:
          type: string
        name:
          type: string
        in_charge:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        description:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        progress:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        ordering:
          type: integer
          default: 0
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        conditions:
          type: object
        settings:
          type: object
        actions:
          type: array
          items:
            required:
              - id
            properties:
              id:
                type: string
              module:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              name:
                type: string
              description:
                type: string
              access_level:
                type: integer
              data:
                type: object
              conditions:
                type: object
              progress_types:
                type: object
              icon:
                type: string
              hex_color:
                type: string
              services:
                type: object
              type:
                type: string
                enum:
                  - auto
                  - setup
              created_by:
                type: string
              updated_by:
                type: string
        deadline:
          type: integer
          default: 0
        hex_color:
          type: string
          default: 31bd56
        icon:
          type: string
          default: pi pi-circle
    NewCon-question-status-types:
      required:
        - name
        - progress
      properties:
        name:
          type: string
        in_charge:
          type: array
          items:
            type: string
        description:
          type: string
        group:
          type: string
        progress:
          type: string
          default: waiting
          enum:
            - waiting
            - working
            - complete
        ordering:
          type: integer
          default: 0
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        conditions:
          type: object
        settings:
          type: object
        actions:
          type: array
          items:
            type: string
        deadline:
          type: integer
          default: 0
        hex_color:
          type: string
          default: 31bd56
        icon:
          type: string
          default: pi pi-circle
        created_by:
          type: string
        updated_by:
          type: string
    Con-question-subtype:
      required:
        - id
        - name
        - status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        question_type:
          required:
            - id
            - name
          properties:
            id:
              type: string
            group:
              type: string
            name:
              type: string
            description:
              type: string
            question_subtypes:
              type: array
              items:
                type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            in_charge_users:
              type: array
              items:
                type: string
            default:
              type: boolean
            hex_color:
              type: string
            fields:
              type: object
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        in_charge_users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        hex_color:
          type: string
          default: 4287f5
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewCon-question-subtype:
      required:
        - name
        - status
      properties:
        name:
          type: string
        description:
          type: string
        question_type:
          type: string
        group:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        in_charge_users:
          type: array
          items:
            type: string
        hex_color:
          type: string
          default: 4287f5
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Con-question-types:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        question_subtypes:
          type: array
          items:
            required:
              - id
              - name
              - status
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              question_type:
                type: string
              group:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              in_charge_users:
                type: array
                items:
                  type: string
              hex_color:
                type: string
              module:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        in_charge_users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        default:
          type: boolean
          default: false
        hex_color:
          type: string
          default: 005C90
        fields:
          type: object
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewCon-question-types:
      required:
        - name
      properties:
        group:
          type: string
        name:
          type: string
        description:
          type: string
        question_subtypes:
          type: array
          items:
            type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        in_charge_users:
          type: array
          items:
            type: string
        default:
          type: boolean
          default: false
        hex_color:
          type: string
          default: 005C90
        fields:
          type: object
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Con-questions:
      required:
        - id
        - question
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        type:
          required:
            - id
            - name
          properties:
            id:
              type: string
            group:
              type: string
            name:
              type: string
            description:
              type: string
            question_subtypes:
              type: array
              items:
                type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            in_charge_users:
              type: array
              items:
                type: string
            default:
              type: boolean
            hex_color:
              type: string
            fields:
              type: object
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        identification:
          type: string
        question:
          type: string
        final_answer:
          type: string
        hide:
          type: boolean
          default: false
        status_custom:
          required:
            - id
            - name
            - progress
          properties:
            id:
              type: string
            name:
              type: string
            in_charge:
              type: array
              items:
                type: string
            description:
              type: string
            group:
              type: string
            progress:
              type: string
              enum:
                - waiting
                - working
                - complete
            ordering:
              type: integer
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            conditions:
              type: object
            settings:
              type: object
            actions:
              type: array
              items:
                type: string
            deadline:
              type: integer
            hex_color:
              type: string
            icon:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: integer
          default: 0
        subtype:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            question_type:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            in_charge_users:
              type: array
              items:
                type: string
            hex_color:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        last_status_id:
          type: integer
          default: '0'
        question_normalized:
          type: string
        custom_data:
          type: object
        assigned_users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        status_enum:
          type: string
          default: active
          enum:
            - active
            - closed
            - inactive
            - disabled
            - reproved
        last_update:
          type: string
          format: date-time
    NewCon-questions:
      required:
        - question
      properties:
        id_integration:
          type: string
        group:
          type: string
        user:
          type: string
        type:
          type: string
        type_original:
          type: string
        identification:
          type: string
        keywords:
          type: object
        question:
          type: string
        final_answer:
          type: string
        hide:
          type: boolean
          default: false
        status_custom:
          type: string
        status:
          type: integer
          default: 0
        words:
          type: object
        status_sync:
          type: string
          default: processing
          enum:
            - processing
            - awaiting
            - error
            - finish
        log_sync:
          type: string
        subtype:
          type: string
        last_status_id:
          type: integer
          default: '0'
        question_normalized:
          type: string
        custom_data:
          type: object
        assigned_users:
          type: array
          items:
            type: string
        status_enum:
          type: string
          default: active
          enum:
            - active
            - closed
            - inactive
            - disabled
            - reproved
        last_update:
          type: string
          format: date-time
        created_by:
          type: string
        updated_by:
          type: string
    Con-status-actions:
      required:
        - id
      properties:
        id:
          type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        name:
          type: string
        description:
          type: string
        access_level:
          type: integer
          default: 0
        data:
          type: object
        conditions:
          type: object
        progress_types:
          type: object
        icon:
          type: string
        hex_color:
          type: string
          default: 7140ed
        services:
          type: object
        type:
          type: string
          default: setup
          enum:
            - auto
            - setup
    NewCon-status-actions:
      properties:
        module:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        name:
          type: string
        description:
          type: string
        access_level:
          type: integer
          default: 0
        data:
          type: object
        conditions:
          type: object
        progress_types:
          type: object
        icon:
          type: string
        hex_color:
          type: string
          default: 7140ed
        services:
          type: object
        type:
          type: string
          default: setup
          enum:
            - auto
            - setup
        created_by:
          type: string
        updated_by:
          type: string
    Document-versions:
      required:
        - id
      properties:
        id:
          type: string
        key:
          type: string
        serverVersion:
          type: string
        user:
          type: object
        version:
          type: number
        changes:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        document:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        item:
          required:
            - id
            - reference
            - status
          properties:
            id:
              type: string
            reference:
              type: string
            user:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            type:
              type: string
            data:
              type: object
            request_email:
              type: string
            answer_history:
              type: object
            form_result:
              type: string
            document:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        changes_json:
          type: object
    NewDocument-versions:
      properties:
        key:
          type: string
        serverVersion:
          type: string
        user:
          type: object
        version:
          type: number
        group:
          type: string
        module:
          type: string
        item:
          type: string
        changes_json:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    Enl-order-items:
      required:
        - id
        - qty
        - total
      properties:
        id:
          type: string
        order:
          required:
            - id
            - status
            - type
          properties:
            id:
              type: string
            status:
              type: string
              enum:
                - pending
                - approved
                - reproved
            type:
              type: string
              enum:
                - default
            user:
              type: string
            total_value:
              type: number
            created_by:
              type: string
            updated_by:
              type: string
        product:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            module:
              type: string
            price:
              type: number
            description:
              type: string
            image_url:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        qty:
          type: integer
        total:
          type: number
    NewEnl-order-items:
      required:
        - qty
        - total
      properties:
        order:
          type: string
        product:
          type: string
        qty:
          type: integer
        total:
          type: number
        created_by:
          type: string
        updated_by:
          type: string
    Enl-orders:
      required:
        - id
        - status
        - type
      properties:
        id:
          type: string
        status:
          type: string
          default: pending
          enum:
            - pending
            - approved
            - reproved
        type:
          type: string
          default: default
          enum:
            - default
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        total_value:
          type: number
    NewEnl-orders:
      required:
        - status
        - type
      properties:
        status:
          type: string
          default: pending
          enum:
            - pending
            - approved
            - reproved
        type:
          type: string
          default: default
          enum:
            - default
        user:
          type: string
        total_value:
          type: number
        created_by:
          type: string
        updated_by:
          type: string
    Enl-products:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        price:
          type: number
          default: 0
        description:
          type: string
        image_url:
          type: string
    NewEnl-products:
      required:
        - name
      properties:
        name:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        module:
          type: string
        price:
          type: number
          default: 0
        description:
          type: string
        image_url:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Ent-cities:
      required:
        - id
      properties:
        id:
          type: string
        ibge_id:
          type: string
        municipio:
          type: string
        uf:
          type: string
        ibge_json:
          type: object
    NewEnt-cities:
      properties:
        ibge_id:
          type: string
        municipio:
          type: string
        uf:
          type: string
        ibge_json:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    Ent-courts:
      required:
        - id
        - name
        - abbreviation
        - kurier_integration
      properties:
        id:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        ref_code:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
    NewEnt-courts:
      required:
        - name
        - abbreviation
        - kurier_integration
      properties:
        name:
          type: string
        abbreviation:
          type: string
        ref_code:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        kurier_integration:
          type: boolean
          default: false
        created_by:
          type: string
        updated_by:
          type: string
    Ent-monitoring-results:
      required:
        - id
        - term
        - process_number
      properties:
        id:
          type: string
        monitoring:
          required:
            - id
            - term
          properties:
            id:
              type: string
            user:
              type: string
            term:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            status_api:
              type: integer
            term_variations:
              type: object
            group:
              type: string
            courts:
              type: array
              items:
                type: string
            results:
              type: array
              items:
                type: string
            term_hash:
              type: string
            id_kourier:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        term:
          type: string
        court:
          type: string
        process_number:
          type: string
        distribution_date:
          type: string
          format: date-time
        tipoOcorrencia:
          type: string
        reu:
          type: string
        autor:
          type: string
        forum:
          type: string
        vara:
          type: string
        cidade:
          type: string
        uf:
          type: string
        valor:
          type: number
        advogadoAutor:
          type: string
        dataAudiencia:
          type: string
        processoEletronico:
          type: string
        linkAcessoInicial:
          type: string
        codCliente:
          type: string
        classificacaoAudiencia:
          type: string
    NewEnt-monitoring-results:
      required:
        - term
        - process_number
      properties:
        monitoring:
          type: string
        term:
          type: string
        court:
          type: string
        process_number:
          type: string
        distribution_date:
          type: string
          format: date-time
        tipoOcorrencia:
          type: string
        reu:
          type: string
        autor:
          type: string
        forum:
          type: string
        vara:
          type: string
        cidade:
          type: string
        uf:
          type: string
        valor:
          type: number
        advogadoAutor:
          type: string
        dataAudiencia:
          type: string
        processoEletronico:
          type: string
        linkAcessoInicial:
          type: string
        codCliente:
          type: string
        classificacaoAudiencia:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Ent-monitoring:
      required:
        - id
        - term
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        term:
          type: string
        status:
          type: string
          default: inactive
          enum:
            - active
            - inactive
            - blocked
        term_variations:
          type: object
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        courts:
          type: array
          items:
            required:
              - id
              - name
              - abbreviation
              - kurier_integration
            properties:
              id:
                type: string
              name:
                type: string
              abbreviation:
                type: string
              ref_code:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
              kurier_integration:
                type: boolean
              created_by:
                type: string
              updated_by:
                type: string
        results:
          type: array
          items:
            required:
              - id
              - term
              - process_number
            properties:
              id:
                type: string
              monitoring:
                type: string
              term:
                type: string
              court:
                type: string
              process_number:
                type: string
              distribution_date:
                type: string
              tipoOcorrencia:
                type: string
              reu:
                type: string
              autor:
                type: string
              forum:
                type: string
              vara:
                type: string
              cidade:
                type: string
              uf:
                type: string
              valor:
                type: number
              advogadoAutor:
                type: string
              dataAudiencia:
                type: string
              processoEletronico:
                type: string
              linkAcessoInicial:
                type: string
              codCliente:
                type: string
              classificacaoAudiencia:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
    NewEnt-monitoring:
      required:
        - term
      properties:
        user:
          type: string
        term:
          type: string
        status:
          type: string
          default: inactive
          enum:
            - active
            - inactive
            - blocked
        status_api:
          type: integer
          default: 0
        term_variations:
          type: object
        group:
          type: string
        courts:
          type: array
          items:
            type: string
        results:
          type: array
          items:
            type: string
        term_hash:
          type: string
        id_kourier:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Ewallet-credits:
      required:
        - id
        - type
        - status
        - value
        - refererral
      properties:
        id:
          type: string
        ewallet:
          required:
            - id
            - name
            - hash
          properties:
            id:
              type: string
            user:
              type: string
            group:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
                - removed
            notification_email:
              type: string
            hash:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        type:
          type: string
          default: credit
          enum:
            - credit
            - bonus
        status:
          type: string
          default: invalid
          enum:
            - valid
            - invalid
            - blocked
            - removed
        value:
          type: number
          default: 0
        refererral:
          type: string
        description:
          type: string
    NewEwallet-credits:
      required:
        - type
        - status
        - value
        - refererral
      properties:
        ewallet:
          type: string
        type:
          type: string
          default: credit
          enum:
            - credit
            - bonus
        status:
          type: string
          default: invalid
          enum:
            - valid
            - invalid
            - blocked
            - removed
        value:
          type: number
          default: 0
        refererral:
          type: string
        description:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Ewallet:
      required:
        - id
        - name
        - hash
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: inactive
          enum:
            - active
            - inactive
            - blocked
            - removed
        notification_email:
          type: string
        hash:
          type: string
    NewEwallet:
      required:
        - name
        - hash
      properties:
        user:
          type: string
        group:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          default: inactive
          enum:
            - active
            - inactive
            - blocked
            - removed
        notification_email:
          type: string
        hash:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Group-adresses:
      required:
        - id
        - name
        - country_code
        - country_desc
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        name:
          type: string
        default:
          type: boolean
          default: false
        country_code:
          type: string
          default: '1058'
        country_desc:
          type: string
          default: Brasil
        street:
          type: string
        number:
          type: string
          default: S/N
        complement:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        custom:
          type: object
    NewGroup-adresses:
      required:
        - name
        - country_code
        - country_desc
      properties:
        group:
          type: string
        name:
          type: string
        default:
          type: boolean
          default: false
        country_code:
          type: string
          default: '1058'
        country_desc:
          type: string
          default: Brasil
        street:
          type: string
        number:
          type: string
          default: S/N
        complement:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        custom:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    Group-configs:
      required:
        - id
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        data:
          type: object
        description:
          type: string
        name:
          type: string
        reference:
          type: string
        value:
          type: string
        menu:
          type: object
    NewGroup-configs:
      properties:
        group:
          type: string
        module:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        data:
          type: object
        description:
          type: string
        name:
          type: string
        reference:
          type: string
        value:
          type: string
        menu:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    Group-email-templates:
      required:
        - id
        - reference
        - body_html
        - subject
        - status
        - name
      properties:
        id:
          type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        reference:
          type: string
        body_html:
          type: string
        subject:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        replacements:
          type: object
        copy_list:
          type: object
        name:
          type: string
        default:
          type: boolean
          default: false
    NewGroup-email-templates:
      required:
        - reference
        - body_html
        - subject
        - status
        - name
      properties:
        module:
          type: string
        group:
          type: string
        reference:
          type: string
        body_html:
          type: string
        subject:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        replacements:
          type: object
        copy_list:
          type: object
        name:
          type: string
        default:
          type: boolean
          default: false
        created_by:
          type: string
        updated_by:
          type: string
    Group-invites:
      required:
        - id
        - module_id
        - role_id
        - license_id
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: processing
          enum:
            - processing
            - send
            - error
            - complete
        email:
          type: string
        token:
          type: string
        email_list:
          type: object
        module_id:
          type: integer
        role_id:
          type: integer
        license_id:
          type: integer
          default: 0
        template_id:
          type: string
        template_data:
          type: object
        razao_social:
          type: string
        nome_fantasia:
          type: string
        cnae:
          type: string
        tipo_fornecedor:
          type: string
        tipo_tributacao:
          type: string
        servico_prestado:
          type: string
        codigo_servico:
          type: string
        inscricao_estadual:
          type: string
        inscricao_municipal:
          type: string
        telefone1:
          type: string
        telefone2:
          type: string
        email1:
          type: string
        email2:
          type: string
        nome_contato1:
          type: string
        nome_contato2:
          type: string
        endereco:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        pais:
          type: string
        cep:
          type: string
        nome_banco:
          type: string
        agencia:
          type: string
        titularidade:
          type: string
        numero_banco:
          type: string
        conta_corrente:
          type: string
        cnpj:
          type: string
    NewGroup-invites:
      required:
        - module_id
        - role_id
        - license_id
      properties:
        group:
          type: string
        status:
          type: string
          default: processing
          enum:
            - processing
            - send
            - error
            - complete
        email:
          type: string
        token:
          type: string
        email_list:
          type: object
        module_id:
          type: integer
        role_id:
          type: integer
        license_id:
          type: integer
          default: 0
        template_id:
          type: string
        template_data:
          type: object
        razao_social:
          type: string
        nome_fantasia:
          type: string
        cnae:
          type: string
        tipo_fornecedor:
          type: string
        tipo_tributacao:
          type: string
        servico_prestado:
          type: string
        codigo_servico:
          type: string
        inscricao_estadual:
          type: string
        inscricao_municipal:
          type: string
        telefone1:
          type: string
        telefone2:
          type: string
        email1:
          type: string
        email2:
          type: string
        nome_contato1:
          type: string
        nome_contato2:
          type: string
        endereco:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        pais:
          type: string
        cep:
          type: string
        nome_banco:
          type: string
        agencia:
          type: string
        titularidade:
          type: string
        numero_banco:
          type: string
        conta_corrente:
          type: string
        cnpj:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Group-licenses:
      required:
        - id
        - status
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        licenses:
          type: integer
          default: 1
    NewGroup-licenses:
      required:
        - status
      properties:
        group:
          type: string
        module:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        licenses:
          type: integer
          default: 1
        created_by:
          type: string
        updated_by:
          type: string
    Group-logo:
      required:
        - id
        - url
      properties:
        id:
          type: string
        url:
          type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewGroup-logo:
      required:
        - url
      properties:
        url:
          type: string
        module:
          type: string
        group:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Group-members:
      required:
        - id
      properties:
        id:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        group_licenses:
          type: array
          items:
            required:
              - id
              - status
            properties:
              id:
                type: string
              group:
                type: string
              module:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              licenses:
                type: integer
              created_by:
                type: string
              updated_by:
                type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        user_role:
          required:
            - id
            - name
            - access_level
          properties:
            id:
              type: string
            group:
              type: string
            module:
              type: string
            id_integration:
              type: string
            name:
              type: string
            description:
              type: string
            access_level:
              type: integer
            custom:
              type: object
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
    NewGroup-members:
      properties:
        group:
          type: string
        group_licenses:
          type: array
          items:
            type: string
        user:
          type: string
        module:
          type: string
        user_role:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
        created_by:
          type: string
        updated_by:
          type: string
    Group:
      required:
        - id
        - name
        - max_users
        - corp_name
        - corp_id
      properties:
        id:
          type: string
        name:
          type: string
        reference:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - blocked
        max_users:
          type: integer
          default: 10
        corp_name:
          type: string
        trading_name:
          type: string
        corp_id:
          type: string
        custom:
          type: object
        image:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        image_replace:
          type: string
        owner:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        address:
          required:
            - id
            - name
            - country_code
            - country_desc
          properties:
            id:
              type: string
            group:
              type: string
            name:
              type: string
            default:
              type: boolean
            country_code:
              type: string
            country_desc:
              type: string
            street:
              type: string
            number:
              type: string
            complement:
              type: string
            district:
              type: string
            city:
              type: string
            state:
              type: string
            zipcode:
              type: string
            custom:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        managers:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
    NewGroup:
      required:
        - name
        - max_users
        - corp_name
        - corp_id
      properties:
        name:
          type: string
        reference:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - blocked
        max_users:
          type: integer
          default: 10
        corp_name:
          type: string
        trading_name:
          type: string
        corp_id:
          type: string
        custom:
          type: object
        image_replace:
          type: string
        owner:
          type: string
        address:
          type: string
        managers:
          type: array
          items:
            type: string
        created_by:
          type: string
        updated_by:
          type: string
    Ind-reports:
      required:
        - id
        - name
        - iframe_url
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        iframe_url:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        access_level:
          type: integer
          default: 0
        description:
          type: string
        image:
          type: string
        allowed_users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        limit_users:
          type: boolean
          default: false
    NewInd-reports:
      required:
        - name
        - iframe_url
      properties:
        name:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        iframe_url:
          type: string
        group:
          type: string
        access_level:
          type: integer
          default: 0
        description:
          type: string
        image:
          type: string
        allowed_users:
          type: array
          items:
            type: string
        limit_users:
          type: boolean
          default: false
        created_by:
          type: string
        updated_by:
          type: string
    Model-change-logs:
      required:
        - id
      properties:
        id:
          type: string
        event:
          type: string
          enum:
            - create
            - update
            - delete
        model:
          type: string
        entry:
          type: object
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        summary:
          type: string
        description:
          type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: new
          enum:
            - new
            - processed
            - ignored
    NewModel-change-logs:
      properties:
        event:
          type: string
          enum:
            - create
            - update
            - delete
        model:
          type: string
        entry:
          type: object
        user:
          type: string
        summary:
          type: string
        description:
          type: string
        module:
          type: string
        group:
          type: string
        status:
          type: string
          default: new
          enum:
            - new
            - processed
            - ignored
        created_by:
          type: string
        updated_by:
          type: string
    Module-changelogs:
      required:
        - id
        - version
        - title
        - changes
      properties:
        id:
          type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        version:
          type: string
        title:
          type: string
        description:
          type: string
        reference:
          type: string
        changes:
          type: object
    NewModule-changelogs:
      required:
        - version
        - title
        - changes
      properties:
        module:
          type: string
        version:
          type: string
        title:
          type: string
        description:
          type: string
        reference:
          type: string
        hide:
          type: boolean
          default: true
        changes:
          type: object
        created_by:
          type: string
        updated_by:
          type: string
    Module-groups:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        image:
          type: string
        access_level:
          type: integer
          default: 0
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        owner_group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewModule-groups:
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        users:
          type: array
          items:
            type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        image:
          type: string
        access_level:
          type: integer
          default: 0
        module:
          type: string
        owner_group:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Modules:
      required:
        - id
        - name
        - slug
        - visibilit
        - token
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        slug:
          type: string
        description:
          type: string
        image:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        image_replace_url:
          type: string
        endpoint:
          type: string
        visibilit:
          type: string
          default: restricted
          enum:
            - restricted
            - all
            - none
        version:
          type: string
        custom_login:
          type: boolean
          default: false
        custom:
          type: object
        icon:
          type: string
        app_url:
          type: string
        published_at:
          type: string
          format: date-time
    NewModules:
      required:
        - name
        - slug
        - visibilit
        - token
      properties:
        name:
          type: string
        status:
          type: string
          default: active
          enum:
            - active
            - inactive
            - blocked
        slug:
          type: string
        description:
          type: string
        image_replace_url:
          type: string
        endpoint:
          type: string
        visibilit:
          type: string
          default: restricted
          enum:
            - restricted
            - all
            - none
        version:
          type: string
        token:
          type: string
        custom_login:
          type: boolean
          default: false
        custom:
          type: object
        icon:
          type: string
        app_url:
          type: string
        published_at:
          type: string
          format: date-time
        created_by:
          type: string
        updated_by:
          type: string
    Navigation-group:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        user_roles:
          type: array
          items:
            required:
              - id
              - name
              - access_level
            properties:
              id:
                type: string
              group:
                type: string
              module:
                type: string
              id_integration:
                type: string
              name:
                type: string
              description:
                type: string
              access_level:
                type: integer
              custom:
                type: object
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              created_by:
                type: string
              updated_by:
                type: string
        access_level:
          type: integer
          default: 0
        type:
          type: string
          default: default
          enum:
            - default
            - sidebar
            - topbar
            - footer
        navigations:
          type: array
          items:
            required:
              - id
              - name
              - icon
            properties:
              id:
                type: string
              user_roles:
                type: array
                items:
                  type: string
              access_level:
                type: integer
              name:
                type: string
              path:
                type: string
              icon:
                type: string
              custom:
                type: object
              navigation_group:
                type: string
              sub_navigations:
                type: array
                items:
                  type: string
              reference:
                type: string
              module:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        reference:
          type: string
    NewNavigation-group:
      required:
        - name
      properties:
        name:
          type: string
        user_roles:
          type: array
          items:
            type: string
        access_level:
          type: integer
          default: 0
        type:
          type: string
          default: default
          enum:
            - default
            - sidebar
            - topbar
            - footer
        navigations:
          type: array
          items:
            type: string
        module:
          type: string
        reference:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Navigations:
      required:
        - id
        - name
        - icon
      properties:
        id:
          type: string
        user_roles:
          type: array
          items:
            required:
              - id
              - name
              - access_level
            properties:
              id:
                type: string
              group:
                type: string
              module:
                type: string
              id_integration:
                type: string
              name:
                type: string
              description:
                type: string
              access_level:
                type: integer
              custom:
                type: object
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              created_by:
                type: string
              updated_by:
                type: string
        access_level:
          type: integer
          default: 0
        name:
          type: string
        path:
          type: string
        icon:
          type: string
        custom:
          type: object
        navigation_group:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            user_roles:
              type: array
              items:
                type: string
            access_level:
              type: integer
            type:
              type: string
              enum:
                - default
                - sidebar
                - topbar
                - footer
            navigations:
              type: array
              items:
                type: string
            module:
              type: string
            reference:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        sub_navigations:
          type: array
          items:
            required:
              - id
              - name
              - icon
            properties:
              id:
                type: string
              user_roles:
                type: array
                items:
                  type: string
              access_level:
                type: integer
              name:
                type: string
              path:
                type: string
              icon:
                type: string
              custom:
                type: object
              navigation_group:
                type: string
              sub_navigations:
                type: array
                items:
                  type: string
              reference:
                type: string
              module:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        reference:
          type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewNavigations:
      required:
        - name
        - icon
      properties:
        user_roles:
          type: array
          items:
            type: string
        access_level:
          type: integer
          default: 0
        name:
          type: string
        path:
          type: string
        icon:
          type: string
        custom:
          type: object
        navigation_group:
          type: string
        sub_navigations:
          type: array
          items:
            type: string
        reference:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Newspapers:
      required:
        - id
      properties:
        id:
          type: string
        source:
          type: string
        author:
          type: string
        title:
          type: string
        description:
          type: string
        image:
          type: string
        published_date:
          type: string
          format: date-time
        original_url:
          type: string
    NewNewspapers:
      properties:
        source:
          type: string
        author:
          type: string
        title:
          type: string
        description:
          type: string
        image:
          type: string
        published_date:
          type: string
          format: date-time
        original_url:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Questions:
      required:
        - id
        - status
      properties:
        id:
          type: string
        status:
          type: string
          default: new
          enum:
            - new
            - pending
            - rejected
            - complete
            - canceled
            - archived
            - deleted
        data:
          type: object
        attachments:
          type: object
        content_raw:
          type: string
        content_clear:
          type: string
        content_normalized:
          type: string
        origin:
          type: string
          enum:
            - teams
            - zapier_email
            - web
            - app
            - form_private
            - form_public
        email:
          type: string
        content_extracted:
          type: string
        answer_raw:
          type: string
        answer_clear:
          type: string
        subject:
          type: string
        identification:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        subject_type:
          required:
            - id
            - name
          properties:
            id:
              type: string
            group:
              type: string
            name:
              type: string
            description:
              type: string
            question_subtypes:
              type: array
              items:
                type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            in_charge_users:
              type: array
              items:
                type: string
            default:
              type: boolean
            hex_color:
              type: string
            fields:
              type: object
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        subject_subtype:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            question_type:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            in_charge_users:
              type: array
              items:
                type: string
            hex_color:
              type: string
            module:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        form_result:
          required:
            - id
          properties:
            id:
              type: string
            status:
              type: string
              enum:
                - new
                - pending
                - item_created
                - closed
                - approved
                - rejected
                - completed
                - canceled
                - archived
                - deleted
            form:
              type: string
            data:
              type: object
            email:
              type: string
            group:
              type: string
            module:
              type: string
            user:
              type: string
            item:
              type: string
            question:
              type: string
            document:
              type: object
            origin:
              type: string
              enum:
                - zapier_email
                - teams
                - form_private
                - form_public
            data_privacy:
              type: string
              enum:
                - private
                - public
            created_by:
              type: string
            updated_by:
              type: string
        data_privacy:
          type: string
          default: public
          enum:
            - private
            - public
    NewQuestions:
      required:
        - status
      properties:
        group:
          type: string
        module:
          type: string
        status:
          type: string
          default: new
          enum:
            - new
            - pending
            - rejected
            - complete
            - canceled
            - archived
            - deleted
        data:
          type: object
        attachments:
          type: object
        content_raw:
          type: string
        content_clear:
          type: string
        content_normalized:
          type: string
        origin:
          type: string
          enum:
            - teams
            - zapier_email
            - web
            - app
            - form_private
            - form_public
        email:
          type: string
        content_extracted:
          type: string
        answer_raw:
          type: string
        answer_clear:
          type: string
        subject:
          type: string
        identification:
          type: string
        user:
          type: string
        subject_type:
          type: string
        subject_subtype:
          type: string
        form_result:
          type: string
        data_privacy:
          type: string
          default: public
          enum:
            - private
            - public
        created_by:
          type: string
        updated_by:
          type: string
    Sendmail-template:
      required:
        - id
        - type
      properties:
        id:
          type: string
        template_id:
          type: string
        template_data:
          type: object
        status:
          type: string
          default: active
          enum:
            - active
            - inative
        type:
          type: string
          enum:
            - invite
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        name:
          type: string
    NewSendmail-template:
      required:
        - type
      properties:
        template_id:
          type: string
        template_data:
          type: object
        status:
          type: string
          default: active
          enum:
            - active
            - inative
        type:
          type: string
          enum:
            - invite
        group:
          type: string
        name:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Sendmail:
      required:
        - id
        - subject
        - body
      properties:
        id:
          type: string
        recipient:
          type: string
        subject:
          type: string
        body:
          type: string
        email_list:
          type: object
        status:
          type: string
          default: processing
          enum:
            - processing
            - send
            - error
            - cancel
        type:
          type: integer
          default: 0
        attachments:
          type: object
        template_id:
          type: string
        template_data:
          type: object
        send_at:
          type: string
          format: date-time
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewSendmail:
      required:
        - subject
        - body
      properties:
        recipient:
          type: string
        subject:
          type: string
        body:
          type: string
        email_list:
          type: object
        status:
          type: string
          default: processing
          enum:
            - processing
            - send
            - error
            - cancel
        type:
          type: integer
          default: 0
        attachments:
          type: object
        template_id:
          type: string
        template_data:
          type: object
        send_at:
          type: string
          format: date-time
        group:
          type: string
        module:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Survey-answer-comments:
      required:
        - id
      properties:
        id:
          type: string
        description:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        survey_answer:
          required:
            - id
            - email
          properties:
            id:
              type: string
            item:
              type: string
            email:
              type: string
            hash:
              type: string
            group:
              type: string
            module:
              type: string
            status:
              type: string
              enum:
                - pending
                - answered
                - canceled
            rating:
              type: number
            description:
              type: string
            feedbacks:
              type: array
              items:
                type: string
            item_type:
              type: string
            survey_answer_comments:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewSurvey-answer-comments:
      properties:
        description:
          type: string
        user:
          type: string
        module:
          type: string
        group:
          type: string
        survey_answer:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Survey-answer-feedbacks:
      required:
        - id
      properties:
        id:
          type: string
        feedback:
          type: string
          enum:
            - like
            - dislike
        survey_answer:
          required:
            - id
            - email
          properties:
            id:
              type: string
            item:
              type: string
            email:
              type: string
            hash:
              type: string
            group:
              type: string
            module:
              type: string
            status:
              type: string
              enum:
                - pending
                - answered
                - canceled
            rating:
              type: number
            description:
              type: string
            feedbacks:
              type: array
              items:
                type: string
            item_type:
              type: string
            survey_answer_comments:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewSurvey-answer-feedbacks:
      properties:
        feedback:
          type: string
          enum:
            - like
            - dislike
        survey_answer:
          type: string
        group:
          type: string
        module:
          type: string
        user:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Survey-answers:
      required:
        - id
        - email
      properties:
        id:
          type: string
        item:
          required:
            - id
            - reference
            - status
          properties:
            id:
              type: string
            reference:
              type: string
            user:
              type: string
            module:
              type: string
            group:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
            type:
              type: string
            data:
              type: object
            request_email:
              type: string
            answer_history:
              type: object
            form_result:
              type: string
            document:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        email:
          type: string
        hash:
          type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        module:
          required:
            - id
            - name
            - slug
            - visibilit
            - token
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            slug:
              type: string
            description:
              type: string
            image:
              type: string
            image_replace_url:
              type: string
            endpoint:
              type: string
            visibilit:
              type: string
              enum:
                - restricted
                - all
                - none
            version:
              type: string
            token:
              type: string
            custom_login:
              type: boolean
            custom:
              type: object
            icon:
              type: string
            app_url:
              type: string
            published_at:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: pending
          enum:
            - pending
            - answered
            - canceled
        rating:
          type: number
        description:
          type: string
        feedbacks:
          type: array
          items:
            required:
              - id
            properties:
              id:
                type: string
              feedback:
                type: string
                enum:
                  - like
                  - dislike
              survey_answer:
                type: string
              group:
                type: string
              module:
                type: string
              user:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        item_type:
          required:
            - id
            - name
            - status
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            group:
              type: string
            module:
              type: string
            fields:
              type: object
            module_groups:
              type: array
              items:
                type: string
            icon:
              type: string
            hex_color:
              type: string
            has_template:
              type: boolean
            converted:
              type: boolean
            c_fields:
              type: array
              items:
                type: string
            rating_type:
              type: string
              enum:
                - icon
                - slide
                - emoji
                - star
            scale_number:
              type: integer
            rating_mode:
              type: string
              enum:
                - manual
                - automatic
            copy_list:
              type: object
            evaluation:
              type: boolean
            invite_text:
              type: string
            copy_list_users:
              type: object
            active_folders:
              type: object
            created_by:
              type: string
            updated_by:
              type: string
        survey_answer_comments:
          type: array
          items:
            required:
              - id
            properties:
              id:
                type: string
              description:
                type: string
              user:
                type: string
              module:
                type: string
              group:
                type: string
              survey_answer:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
    NewSurvey-answers:
      required:
        - email
      properties:
        item:
          type: string
        email:
          type: string
        hash:
          type: string
        group:
          type: string
        module:
          type: string
        status:
          type: string
          default: pending
          enum:
            - pending
            - answered
            - canceled
        rating:
          type: number
        description:
          type: string
        feedbacks:
          type: array
          items:
            type: string
        item_type:
          type: string
        survey_answer_comments:
          type: array
          items:
            type: string
        created_by:
          type: string
        updated_by:
          type: string
    User-adresses:
      required:
        - id
        - name
        - country_code
        - street
        - number
        - district
        - city
        - state
        - zipcode
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        name:
          type: string
        default:
          type: boolean
          default: false
        country_code:
          type: string
          default: '1058'
        country_desc:
          type: string
          default: Brasil
        street:
          type: string
        number:
          type: string
          default: S/N
        complement:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        custom:
          type: object
        users_info:
          required:
            - id
            - fname
            - type
          properties:
            id:
              type: string
            user:
              type: string
            fname:
              type: string
            lname:
              type: string
            type:
              type: string
              enum:
                - personal
                - company
            token:
              type: string
            modules:
              type: array
              items:
                type: string
            ident_number:
              type: string
            groups:
              type: array
              items:
                type: string
            custom:
              type: object
            active_group:
              type: integer
            user_roles:
              type: array
              items:
                type: string
            group_licenses:
              type: array
              items:
                type: string
            image:
              type: string
            user_address:
              type: string
            status:
              type: string
              enum:
                - pending
                - active
                - inactive
                - blocked
            office:
              type: string
            licenses_migrate:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
    NewUser-adresses:
      required:
        - name
        - country_code
        - street
        - number
        - district
        - city
        - state
        - zipcode
      properties:
        user:
          type: string
        name:
          type: string
        default:
          type: boolean
          default: false
        country_code:
          type: string
          default: '1058'
        country_desc:
          type: string
          default: Brasil
        street:
          type: string
        number:
          type: string
          default: S/N
        complement:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        custom:
          type: object
        users_info:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    User-images:
      required:
        - id
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        image:
          required:
            - id
            - name
            - hash
            - mime
            - size
            - url
            - provider
          properties:
            id:
              type: string
            name:
              type: string
            alternativeText:
              type: string
            caption:
              type: string
            width:
              type: integer
            height:
              type: integer
            formats:
              type: object
            hash:
              type: string
            ext:
              type: string
            mime:
              type: string
            size:
              type: number
            url:
              type: string
            previewUrl:
              type: string
            provider:
              type: string
            provider_metadata:
              type: object
            related:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          enum:
            - active
            - inactive
        type:
          type: string
          default: profile
          enum:
            - profile
    NewUser-images:
      properties:
        user:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
        type:
          type: string
          default: profile
          enum:
            - profile
        created_by:
          type: string
        updated_by:
          type: string
    User-offices:
      required:
        - id
      properties:
        id:
          type: string
        user:
          required:
            - id
            - fname
            - type
          properties:
            id:
              type: string
            user:
              type: string
            fname:
              type: string
            lname:
              type: string
            type:
              type: string
              enum:
                - personal
                - company
            token:
              type: string
            modules:
              type: array
              items:
                type: string
            ident_number:
              type: string
            groups:
              type: array
              items:
                type: string
            custom:
              type: object
            active_group:
              type: integer
            user_roles:
              type: array
              items:
                type: string
            group_licenses:
              type: array
              items:
                type: string
            image:
              type: string
            user_address:
              type: string
            status:
              type: string
              enum:
                - pending
                - active
                - inactive
                - blocked
            office:
              type: string
            licenses_migrate:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        corp_name:
          type: string
        corp_id:
          type: string
        ref_name:
          type: string
        employees:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        group:
          required:
            - id
            - name
            - max_users
            - corp_name
            - corp_id
          properties:
            id:
              type: string
            name:
              type: string
            reference:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - blocked
            max_users:
              type: integer
            corp_name:
              type: string
            trading_name:
              type: string
            corp_id:
              type: string
            custom:
              type: object
            image:
              type: string
            image_replace:
              type: string
            owner:
              type: string
            address:
              type: string
            managers:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        nome_fantasia:
          type: string
        cnae:
          type: string
        tipo_fornecedor:
          type: string
        tipo_tributacao:
          type: string
        servico_prestado:
          type: string
        codigo_servico:
          type: string
        inscricao_estadual:
          type: string
        inscricao_municipal:
          type: string
        telefone1:
          type: string
        telefone2:
          type: string
        email1:
          type: string
        email2:
          type: string
        nome_contato1:
          type: string
        nome_contato2:
          type: string
        endereco:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        pais:
          type: string
        cep:
          type: string
        nome_banco:
          type: string
        agencia:
          type: string
        titularidade:
          type: string
        numero_banco:
          type: string
        conta_corrente:
          type: string
    NewUser-offices:
      properties:
        user:
          type: string
        corp_name:
          type: string
        corp_id:
          type: string
        ref_name:
          type: string
        employees:
          type: array
          items:
            type: string
        group:
          type: string
        nome_fantasia:
          type: string
        cnae:
          type: string
        tipo_fornecedor:
          type: string
        tipo_tributacao:
          type: string
        servico_prestado:
          type: string
        codigo_servico:
          type: string
        inscricao_estadual:
          type: string
        inscricao_municipal:
          type: string
        telefone1:
          type: string
        telefone2:
          type: string
        email1:
          type: string
        email2:
          type: string
        nome_contato1:
          type: string
        nome_contato2:
          type: string
        endereco:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        estado:
          type: string
        pais:
          type: string
        cep:
          type: string
        nome_banco:
          type: string
        agencia:
          type: string
        titularidade:
          type: string
        numero_banco:
          type: string
        conta_corrente:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    User-pass-histories:
      required:
        - id
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        password:
          type: string
          format: password
    NewUser-pass-histories:
      properties:
        user:
          type: string
        password:
          type: string
          format: password
        created_by:
          type: string
        updated_by:
          type: string
    User-phones:
      required:
        - id
        - type
        - number
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        type:
          type: integer
          default: 1
        number:
          type: string
    NewUser-phones:
      required:
        - type
        - number
      properties:
        user:
          type: string
        type:
          type: integer
          default: 1
        number:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    Users-infos:
      required:
        - id
        - fname
        - type
      properties:
        id:
          type: string
        user:
          required:
            - id
            - username
            - email
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            provider:
              type: string
            password:
              type: string
            resetPasswordToken:
              type: string
            confirmationToken:
              type: string
            confirmed:
              type: boolean
            blocked:
              type: boolean
            role:
              type: string
            id_legacy:
              type: integer
            info:
              type: string
            office:
              type: string
            change_password:
              type: boolean
            last_password_reset:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        fname:
          type: string
        lname:
          type: string
        type:
          type: string
          enum:
            - personal
            - company
        token:
          type: string
          minLength: 4
        modules:
          type: array
          items:
            required:
              - id
              - name
              - slug
              - visibilit
              - token
            properties:
              id:
                type: string
              name:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              slug:
                type: string
              description:
                type: string
              image:
                type: string
              image_replace_url:
                type: string
              endpoint:
                type: string
              visibilit:
                type: string
                enum:
                  - restricted
                  - all
                  - none
              version:
                type: string
              token:
                type: string
              custom_login:
                type: boolean
              custom:
                type: object
              icon:
                type: string
              app_url:
                type: string
              published_at:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        ident_number:
          type: string
        groups:
          type: array
          items:
            required:
              - id
              - name
              - max_users
              - corp_name
              - corp_id
            properties:
              id:
                type: string
              name:
                type: string
              reference:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              max_users:
                type: integer
              corp_name:
                type: string
              trading_name:
                type: string
              corp_id:
                type: string
              custom:
                type: object
              image:
                type: string
              image_replace:
                type: string
              owner:
                type: string
              address:
                type: string
              managers:
                type: array
                items:
                  type: string
              created_by:
                type: string
              updated_by:
                type: string
        custom:
          type: object
        active_group:
          type: integer
        user_roles:
          type: array
          items:
            required:
              - id
              - name
              - access_level
            properties:
              id:
                type: string
              group:
                type: string
              module:
                type: string
              id_integration:
                type: string
              name:
                type: string
              description:
                type: string
              access_level:
                type: integer
              custom:
                type: object
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              created_by:
                type: string
              updated_by:
                type: string
        group_licenses:
          type: array
          items:
            required:
              - id
              - status
            properties:
              id:
                type: string
              group:
                type: string
              module:
                type: string
              status:
                type: string
                enum:
                  - active
                  - inactive
                  - blocked
              licenses:
                type: integer
              created_by:
                type: string
              updated_by:
                type: string
        image:
          type: string
        user_address:
          required:
            - id
            - name
            - country_code
            - street
            - number
            - district
            - city
            - state
            - zipcode
          properties:
            id:
              type: string
            user:
              type: string
            name:
              type: string
            default:
              type: boolean
            country_code:
              type: string
            country_desc:
              type: string
            street:
              type: string
            number:
              type: string
            complement:
              type: string
            district:
              type: string
            city:
              type: string
            state:
              type: string
            zipcode:
              type: string
            custom:
              type: object
            users_info:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        status:
          type: string
          default: pending
          enum:
            - pending
            - active
            - inactive
            - blocked
        office:
          required:
            - id
          properties:
            id:
              type: string
            user:
              type: string
            corp_name:
              type: string
            corp_id:
              type: string
            ref_name:
              type: string
            employees:
              type: array
              items:
                type: string
            group:
              type: string
            nome_fantasia:
              type: string
            cnae:
              type: string
            tipo_fornecedor:
              type: string
            tipo_tributacao:
              type: string
            servico_prestado:
              type: string
            codigo_servico:
              type: string
            inscricao_estadual:
              type: string
            inscricao_municipal:
              type: string
            telefone1:
              type: string
            telefone2:
              type: string
            email1:
              type: string
            email2:
              type: string
            nome_contato1:
              type: string
            nome_contato2:
              type: string
            endereco:
              type: string
            complemento:
              type: string
            bairro:
              type: string
            cidade:
              type: string
            estado:
              type: string
            pais:
              type: string
            cep:
              type: string
            nome_banco:
              type: string
            agencia:
              type: string
            titularidade:
              type: string
            numero_banco:
              type: string
            conta_corrente:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        licenses_migrate:
          type: string
    NewUsers-infos:
      required:
        - fname
        - type
      properties:
        user:
          type: string
        fname:
          type: string
        lname:
          type: string
        type:
          type: string
          enum:
            - personal
            - company
        token:
          type: string
          minLength: 4
        modules:
          type: array
          items:
            type: string
        ident_number:
          type: string
        groups:
          type: array
          items:
            type: string
        custom:
          type: object
        active_group:
          type: integer
        user_roles:
          type: array
          items:
            type: string
        group_licenses:
          type: array
          items:
            type: string
        image:
          type: string
        user_address:
          type: string
        status:
          type: string
          default: pending
          enum:
            - pending
            - active
            - inactive
            - blocked
        office:
          type: string
        licenses_migrate:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
    UsersPermissionsRole:
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 3
        description:
          type: string
        type:
          type: string
        permissions:
          type: array
          items:
            required:
              - id
              - type
              - controller
              - action
              - enabled
            properties:
              id:
                type: string
              type:
                type: string
              controller:
                type: string
              action:
                type: string
              enabled:
                type: boolean
              policy:
                type: string
              role:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
        users:
          type: array
          items:
            required:
              - id
              - username
              - email
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
              provider:
                type: string
              password:
                type: string
              resetPasswordToken:
                type: string
              confirmationToken:
                type: string
              confirmed:
                type: boolean
              blocked:
                type: boolean
              role:
                type: string
              id_legacy:
                type: integer
              info:
                type: string
              office:
                type: string
              change_password:
                type: boolean
              last_password_reset:
                type: string
              created_by:
                type: string
              updated_by:
                type: string
    NewUsersPermissionsRole:
      required:
        - name
      properties:
        name:
          type: string
          minLength: 3
        description:
          type: string
        type:
          type: string
        permissions:
          type: array
          items:
            type: string
        users:
          type: array
          items:
            type: string
        created_by:
          type: string
        updated_by:
          type: string
    UsersPermissionsUser:
      required:
        - id
        - username
        - email
      properties:
        id:
          type: string
        username:
          type: string
          minLength: 3
        email:
          type: string
          minLength: 6
        provider:
          type: string
        confirmed:
          type: boolean
          default: false
        blocked:
          type: boolean
          default: false
        role:
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            type:
              type: string
            permissions:
              type: array
              items:
                type: string
            users:
              type: array
              items:
                type: string
            created_by:
              type: string
            updated_by:
              type: string
        id_legacy:
          type: integer
        info:
          required:
            - id
            - fname
            - type
          properties:
            id:
              type: string
            user:
              type: string
            fname:
              type: string
            lname:
              type: string
            type:
              type: string
              enum:
                - personal
                - company
            token:
              type: string
            modules:
              type: array
              items:
                type: string
            ident_number:
              type: string
            groups:
              type: array
              items:
                type: string
            custom:
              type: object
            active_group:
              type: integer
            user_roles:
              type: array
              items:
                type: string
            group_licenses:
              type: array
              items:
                type: string
            image:
              type: string
            user_address:
              type: string
            status:
              type: string
              enum:
                - pending
                - active
                - inactive
                - blocked
            office:
              type: string
            licenses_migrate:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        office:
          required:
            - id
          properties:
            id:
              type: string
            user:
              type: string
            corp_name:
              type: string
            corp_id:
              type: string
            ref_name:
              type: string
            employees:
              type: array
              items:
                type: string
            group:
              type: string
            nome_fantasia:
              type: string
            cnae:
              type: string
            tipo_fornecedor:
              type: string
            tipo_tributacao:
              type: string
            servico_prestado:
              type: string
            codigo_servico:
              type: string
            inscricao_estadual:
              type: string
            inscricao_municipal:
              type: string
            telefone1:
              type: string
            telefone2:
              type: string
            email1:
              type: string
            email2:
              type: string
            nome_contato1:
              type: string
            nome_contato2:
              type: string
            endereco:
              type: string
            complemento:
              type: string
            bairro:
              type: string
            cidade:
              type: string
            estado:
              type: string
            pais:
              type: string
            cep:
              type: string
            nome_banco:
              type: string
            agencia:
              type: string
            titularidade:
              type: string
            numero_banco:
              type: string
            conta_corrente:
              type: string
            created_by:
              type: string
            updated_by:
              type: string
        change_password:
          type: boolean
          default: false
        last_password_reset:
          type: string
          format: date-time
    NewUsersPermissionsUser:
      required:
        - username
        - email
      properties:
        username:
          type: string
          minLength: 3
        email:
          type: string
          minLength: 6
        provider:
          type: string
        password:
          type: string
          format: password
          minLength: 6
        resetPasswordToken:
          type: string
        confirmationToken:
          type: string
        confirmed:
          type: boolean
          default: false
        blocked:
          type: boolean
          default: false
        role:
          type: string
        id_legacy:
          type: integer
        info:
          type: string
        office:
          type: string
        change_password:
          type: boolean
          default: false
        last_password_reset:
          type: string
          format: date-time
        created_by:
          type: string
        updated_by:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


x-tagGroups:
  - name: Autentication
    tags:
      - Local Auth
  - name: Documents
    tags:
      - Document Template
      - Document Versions
  - name: Fields
    tags:
      - Custom Fields
      - Item Types Fields
  # - name: Flow
  #   tags:
  #     - Teste
  # - name: Files
  # - name: Forms
